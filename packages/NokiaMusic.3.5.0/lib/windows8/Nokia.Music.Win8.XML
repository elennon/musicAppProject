<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nokia.Music.Win8</name>
    </assembly>
    <members>
        <member name="T:Nokia.Music.Commands.GetUserPlayHistoryCommand">
            <summary>
            Command to get user playback history
            </summary>
        </member>
        <member name="T:Nokia.Music.Commands.JsonMusicClientCommand`1">
            <summary>
            Defines the Music Client Json Command base class
            </summary>
            <typeparam name="TResult">The type of the returned object.</typeparam>
        </member>
        <member name="T:Nokia.Music.Commands.MusicClientCommand`2">
            <summary>
            Defines the Music Client Command base class
            </summary>
            <typeparam name="TIntermediate">The type of the intermediate object.</typeparam>
            <typeparam name="TResult">The type of the returned object.</typeparam>
        </member>
        <member name="T:Nokia.Music.Commands.MusicClientCommand`1">
            <summary>
            Defines the Music Client Command base class
            </summary>
            <typeparam name="TIntermediate">The type of the intermediate object.</typeparam>
        </member>
        <member name="T:Nokia.Music.Commands.MusicClientCommand">
            <summary>
            Defines the Music Client Command base class
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.MusicClientCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Commands.MusicClientCommand"/> class.
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.MusicClientCommand.SetAdditionalResponseInfo(Nokia.Music.Internal.Response.ResponseInfo)">
            <summary>
            In special cases, allows a command to use any additional information about the response
            </summary>
            <param name="responseInfo">The web response info</param>
        </member>
        <member name="M:Nokia.Music.Commands.MusicClientCommand.BuildQueryStringParams">
            <summary>
            Allows an API method to supply params to be sent in the query string of a request
            </summary>
            <returns>The query string params - Null by default, override to supply query string params for an API method</returns>
        </member>
        <member name="M:Nokia.Music.Commands.MusicClientCommand.BuildRequestHeadersAsync">
            <summary>
            Allows an API method to supply values to be sent in the headers of a request
            </summary>
            <returns>The request headers - Null by default, override to supply request hreaders for an API method</returns>
        </member>
        <member name="M:Nokia.Music.Commands.MusicClientCommand.BuildRequestBody">
            <summary>
            Allows an API method to supply data to be sent in the body of a request
            </summary>
            <returns>The request data - Null by default, override to supply data for an API method</returns>
        </member>
        <member name="M:Nokia.Music.Commands.MusicClientCommand.AppendUriPath(System.Text.StringBuilder)">
            <summary>
            Appends the uri subpath and parameters specific to this API method
            By default, no path is added, override this to add a uri subpath for a method
            </summary>
            <param name="uri">The base uri</param>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand.RequestId">
            <summary>
            Gets or sets an id representing this request.
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand.RawUri">
            <summary>
            Gets the full, raw URI to be used if the command supplies its own non-API structured URI.
            Primarily used in CustomCommands, but in theory could be applied to any command.
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand.BaseApiUri">
            <summary>
            Gets or sets the base uri for Api requests
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand.ContentType">
            <summary>
            Gets the content type for this request
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand.HttpMethod">
            <summary>
            Gets the HTTP method used for this request. GET by default
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand.ClientSettings">
            <summary>
            Gets or sets the settings.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand.RequestHandler">
            <summary>
            Gets or sets the request handler.
            </summary>
            <value>
            The request handler.
            </value>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand.FollowHttpRedirects">
            <summary>
            Gets a value indicating whether redirects should be followed by the Http client. Only needs
            to be overriden if you need to extract the redirect URL
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand.RequiresCountryCode">
            <summary>
            Gets a value indicating whether the API method requires a country code to be specified.
            API methods require a country code by default. Override this method for calls that do not.
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand.RequiresEmptyQuerystring">
            <summary>
            Gets a value indicating whether to use a blank querystring.
            </summary>
            <value>
              <c>true</c> if should use a blank querystring.
            </value>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand.UseBlankTerritory">
            <summary>
            Gets a value indicating whether to use a blank territory in the URI path.
            </summary>
            <value>
              <c>true</c> if should use a blank territory.
            </value>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand.ServiceDomain">
            <summary>
            Gets domain that this command should be using e.g. domain=music
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand.OAuth2">
            <summary>
            Gets or sets OAuth2 Implementation
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand.ExpectsMixRadioHeader">
            <summary>
            Gets a value indicating whether the X-MixRadio header is expected in this command response.
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand.GzipRequestBody">
            <summary>
            Gets a value indicating whether the request body should be gzipped
            </summary>
        </member>
        <member name="T:Nokia.Music.Commands.MusicClientCommand.JTokenConversionDelegate`1">
            <summary>
            Signifies a method for converting a JToken into a typed object that uses client settings
            - e.g. to generate API URI properties such as artist images, sample clips
            </summary>
            <typeparam name="T">The type to return</typeparam>
            <param name="item">The item.</param>
            <param name="settings">The client settings.</param>
            <returns>
            A typed object
            </returns>
        </member>
        <member name="M:Nokia.Music.Commands.MusicClientCommand`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Commands.MusicClientCommand`1"/> class.
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.MusicClientCommand`2.IsValidContentType``1(Nokia.Music.Response{``0})">
            <summary>
            Determines whether we have a valid content type
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="rawResult">The raw result.</param>
            <returns>
              <c>true</c> if this is a valid content type; otherwise, <c>false</c>.
            </returns>
            <remarks>
            API will return application/json for error cases, so allow that as well as the custom type
            </remarks>
        </member>
        <member name="M:Nokia.Music.Commands.MusicClientCommand`2.ListItemResponseHandler``1(Nokia.Music.Response{Newtonsoft.Json.Linq.JObject},System.String,Nokia.Music.Commands.MusicClientCommand.JTokenConversionDelegate{``0})">
            <summary>
            Generic response handler for content lists
            </summary>
            <typeparam name="T">The type to return</typeparam>
            <param name="rawResult">The response</param>
            <param name="itemsName">The json list name</param>
            <param name="converter">The object creation method to use</param>
            <returns>
            A response
            </returns>
        </member>
        <member name="M:Nokia.Music.Commands.MusicClientCommand`2.ItemResponseHandler``1(Nokia.Music.Response{Newtonsoft.Json.Linq.JObject},Nokia.Music.Commands.MusicClientCommand.JTokenConversionDelegate{``0})">
            <summary>
            Generic response handler for single item content
            </summary>
            <typeparam name="T">The type to return</typeparam>
            <param name="rawResult">The response</param>
            <param name="converter">The object creation method to use</param>
            <returns>
            A response
            </returns>
        </member>
        <member name="M:Nokia.Music.Commands.MusicClientCommand`2.ErrorResponseHandler(Nokia.Music.Response)">
            <summary>
            Returns a new <see cref="T:Nokia.Music.Response"/> with an error set.
            </summary>
            <param name="rawResult">The response</param>
            <returns>A Response.</returns>
        </member>
        <member name="M:Nokia.Music.Commands.MusicClientCommand`2.ItemErrorResponseHandler``1(Nokia.Music.Response)">
            <summary>
            Returns a new <see cref="T:Nokia.Music.Response`1"/> with an error set.
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
            <param name="rawResult">The response</param>
            <returns>A Response.</returns>
        </member>
        <member name="M:Nokia.Music.Commands.MusicClientCommand`2.ListItemErrorResponseHandler``1(Nokia.Music.Response)">
            <summary>
            Returns a new <see cref="T:Nokia.Music.ListResponse`1"/> with an error set.
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
            <param name="rawResult">The response</param>
            <returns>A Response.</returns>
        </member>
        <member name="M:Nokia.Music.Commands.MusicClientCommand`2.GetPagingParams">
            <summary>
            Creates an initial querystring dictionary containing paging parameters
            </summary>
            <returns>A dictionary containing standard querystring paging parameters</returns>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand`2.ItemsPerPage">
            <summary>
            Gets or sets the number of items to fetch.
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand`2.StartIndex">
            <summary>
            Gets or sets the zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.MusicClientCommand`2.JsonProcessor">
            <summary>
            Gets a json processor that can parse the response expected by this command.
            By default, a processor for a named item list is returned.
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.GetUserPlayHistoryCommand.AppendUriPath(System.Text.StringBuilder)">
            <summary>
            Appends the uri subpath and parameters specific to this API method
            By default, no path is added, override this to add a uri subpath for a method
            </summary>
            <param name="uri">The base uri</param>
        </member>
        <member name="P:Nokia.Music.Commands.GetUserPlayHistoryCommand.Action">
            <summary>
            Gets or sets the action type to filter results by.
            </summary>
            <value>
            The action.
            </value>
        </member>
        <member name="P:Nokia.Music.Commands.GetUserPlayHistoryCommand.Target">
            <summary>
            Gets the target type to filter results by.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="P:Nokia.Music.Commands.GetUserPlayHistoryCommand.RequiresCountryCode">
            <summary>
            Gets a value indicating whether the API method requires a country code to be specified.
            API methods require a country code by default. Override this method for calls that do not.
            </summary>
        </member>
        <member name="T:Nokia.Music.Commands.GetUserRecentMixesCommand">
            <summary>
            Command to get user recent mixes for the last week
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.GetUserRecentMixesCommand.AppendUriPath(System.Text.StringBuilder)">
            <summary>
            Appends the uri subpath and parameters specific to this API method
            By default, no path is added, override this to add a uri subpath for a method
            </summary>
            <param name="uri">The base uri</param>
        </member>
        <member name="P:Nokia.Music.Commands.GetUserRecentMixesCommand.RequiresCountryCode">
            <summary>
            Gets a value indicating whether the API method requires a country code to be specified.
            API methods require a country code by default. Override this method for calls that do not.
            </summary>
        </member>
        <member name="T:Nokia.Music.Commands.GetUserTopArtistsCommand">
            <summary>
            Command to get user artist chart for the last week
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.GetUserTopArtistsCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Commands.GetUserTopArtistsCommand"/> class.
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.GetUserTopArtistsCommand.AppendUriPath(System.Text.StringBuilder)">
            <summary>
            Appends the uri subpath and parameters specific to this API method
            By default, no path is added, override this to add a uri subpath for a method
            </summary>
            <param name="uri">The base uri</param>
        </member>
        <member name="P:Nokia.Music.Commands.GetUserTopArtistsCommand.EndDate">
            <summary>
            Gets or sets the end date used to build the chart.
            </summary>
            <value>
            The end date.
            </value>
            <remarks>Charts are available for the last week</remarks>
        </member>
        <member name="P:Nokia.Music.Commands.GetUserTopArtistsCommand.StartDate">
            <summary>
            Gets or sets the start date used to build the chart.
            </summary>
            <value>
            The start date.
            </value>
            <remarks>Charts are available for the last week</remarks>
        </member>
        <member name="P:Nokia.Music.Commands.GetUserTopArtistsCommand.RequiresCountryCode">
            <summary>
            Gets a value indicating whether the API method requires a country code to be specified.
            API methods require a country code by default. Override this method for calls that do not.
            </summary>
        </member>
        <member name="T:Nokia.Music.Commands.ArtistProductsCommand">
            <summary>
              Gets products by an artist.
            </summary>
        </member>
        <member name="T:Nokia.Music.Commands.SearchCatalogCommand`1">
            <summary>
            Searches the MixRadio Catalog
            </summary>
            <typeparam name="TReturnType">The type of the returned object.</typeparam>
        </member>
        <member name="M:Nokia.Music.Commands.SearchCatalogCommand`1.BuildQueryStringParams(System.String,System.String,System.String,System.Nullable{Nokia.Music.Types.Category},System.String,System.String,System.Nullable{Nokia.Music.Types.OrderBy},System.Nullable{Nokia.Music.Types.SortOrder},System.Int32,System.Int32)">
            <summary>
            Searches for items
            </summary>
            <param name="searchTerm">The search term.</param>
            <param name="genreId">The genre to filter the results by.</param>
            <param name="id">An artist or product id.</param>
            <param name="category">The category to filter the results by.</param>
            <param name="location">The location to filter the results by.</param>
            <param name="maxdistance">The max distance from the location to to filter the results by.</param>
            <param name="orderBy">The field to sort the items by.</param>
            <param name="sortOrder">The sort order of the items to fetch.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <returns>A response</returns>
        </member>
        <member name="P:Nokia.Music.Commands.SearchCatalogCommand`1.OrderBy">
            <summary>
            Gets or sets the order by field.
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.SearchCatalogCommand`1.SortOrder">
            <summary>
            Gets or sets the sort order.
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.SearchCatalogCommand`1.Category">
            <summary>
            Gets or sets the category.
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.ArtistProductsCommand.AppendUriPath(System.Text.StringBuilder)">
            <summary>
            Appends the uri subpath and parameters specific to this API method
            </summary>
            <param name="uri">The base uri</param>
        </member>
        <member name="P:Nokia.Music.Commands.ArtistProductsCommand.ArtistId">
            <summary>
            Gets or sets the artist id.
            </summary>
            <value>
            The artist id.
            </value>
        </member>
        <member name="T:Nokia.Music.Commands.CountryResolverCommand">
            <summary>
            Defines the country resolver request
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.CountryResolverCommand.CountryCode">
            <summary>
            Gets or sets the supplied country code
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.CountryResolverCommand.RequiresCountryCode">
            <summary>
                We don't want /gb/ in the url
            </summary>
        </member>
        <member name="T:Nokia.Music.Commands.CountryResolverCommand.CountryResolverSettings">
            <summary>
            Implementation of MusicClientSettings for use with country resolver request
            </summary>
        </member>
        <member name="T:Nokia.Music.Internal.IMusicClientSettings">
            <summary>
            Defines the MusicClient Settings
            </summary>
        </member>
        <member name="P:Nokia.Music.Internal.IMusicClientSettings.ClientId">
            <summary>
            Gets the app client id.
            </summary>
            <value>
            The app client id.
            </value>
        </member>
        <member name="P:Nokia.Music.Internal.IMusicClientSettings.CountryCode">
            <summary>
            Gets the country code.
            </summary>
            <value>
            The country code.
            </value>
        </member>
        <member name="P:Nokia.Music.Internal.IMusicClientSettings.CountryCodeBasedOnRegionInfo">
            <summary>
            Gets a value indicating whether the country code was based on region info.
            </summary>
            <value>
            <c>true</c> if the country code was based on region info; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Nokia.Music.Internal.IMusicClientSettings.Language">
            <summary>
            Gets the language code.
            </summary>
            <value>
            The language code.
            </value>
        </member>
        <member name="P:Nokia.Music.Internal.IMusicClientSettings.ApiBaseUrl">
            <summary>
            Gets the base url for non-secure api requests
            </summary>
            <value>
            The API base URL.
            </value>
        </member>
        <member name="P:Nokia.Music.Internal.IMusicClientSettings.SecureApiBaseUrl">
            <summary>
            Gets the base url for secure api requests
            </summary>
            <value>
            The secure API base URL.
            </value>
        </member>
        <member name="T:Nokia.Music.Commands.GenresCommand">
            <summary>
            Gets the available genres
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.GenresCommand.AppendUriPath(System.Text.StringBuilder)">
            <summary>
            Appends the uri subpath and parameters specific to this API method
            </summary>
            <param name="uri">The base uri</param>
        </member>
        <member name="T:Nokia.Music.Commands.GetAuthTokenCommand">
            <summary>
            Gets a bearer token from the API
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.GetAuthTokenCommand.BuildParams(System.Boolean)">
            <summary>
            Builds the request params.
            </summary>
            <param name="forHeader">if set to <c>true</c> then the value is used for a header.</param>
            <returns>A string version of the params</returns>
        </member>
        <member name="M:Nokia.Music.Commands.GetAuthTokenCommand.ConvertParamsToString(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean)">
            <summary>
            Converts request parameters to a string form.
            </summary>
            <param name="request">The request parameters.</param>
            <param name="forHeader">if set to <c>true</c>, the conversion is for header usage.</param>
            <returns>A string version of the parameters</returns>
        </member>
        <member name="M:Nokia.Music.Commands.GetAuthTokenCommand.ConstructAuthHeader">
            <summary>
            Constructs the auth header.
            </summary>
            <returns>An auth header value</returns>
        </member>
        <member name="P:Nokia.Music.Commands.GetAuthTokenCommand.AuthorizationCode">
            <summary>
            Gets or sets the authorization code.
            </summary>
            <value>
            The authorization code.
            </value>
        </member>
        <member name="P:Nokia.Music.Commands.GetAuthTokenCommand.ClientId">
            <summary>
            Gets or sets the client id.
            </summary>
            <value>
            The client id.
            </value>
        </member>
        <member name="P:Nokia.Music.Commands.GetAuthTokenCommand.ClientSecret">
            <summary>
            Gets or sets the client secret.
            </summary>
            <value>
            The client secret.
            </value>
        </member>
        <member name="P:Nokia.Music.Commands.GetAuthTokenCommand.RefreshToken">
            <summary>
            Gets or sets the refresh token.
            </summary>
            <value>
            The refresh token.
            </value>
        </member>
        <member name="P:Nokia.Music.Commands.GetAuthTokenCommand.GrantType">
            <summary>
            Gets the grant type.
            </summary>
            <value>
            The grant type.
            </value>
        </member>
        <member name="M:Nokia.Music.Commands.MixDetailsCommand.AppendUriPath(System.Text.StringBuilder)">
            <summary>
            Appends the uri subpath and parameters specific to this API method
            </summary>
            <param name="uri">The base uri</param>
        </member>
        <member name="P:Nokia.Music.Commands.MixDetailsCommand.Id">
            <summary>
            Gets or sets the mix id
            </summary>
        </member>
        <member name="T:Nokia.Music.Commands.MixesCommand">
            <summary>
              Gets the Mixes available in a group
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.MixesCommand.AppendUriPath(System.Text.StringBuilder)">
            <summary>
            Appends the uri subpath and parameters specific to this API method
            </summary>
            <param name="uri">The base uri</param>
        </member>
        <member name="P:Nokia.Music.Commands.MixesCommand.ExclusiveTag">
            <summary>
              Gets or sets the mix group exclusive tag.
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.MixesCommand.Exclusivity">
            <summary>
              Gets or sets the mix group exclusivity tokens.
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.MixesCommand.MixGroupId">
            <summary>
              Gets or sets the mix group id.
            </summary>
        </member>
        <member name="T:Nokia.Music.Commands.MixGroupsCommand">
            <summary>
            Gets the Mix Groups available
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.MixGroupsCommand.AppendUriPath(System.Text.StringBuilder)">
            <summary>
            Appends the uri subpath and parameters specific to this API method
            </summary>
            <param name="uri">The base uri</param>
        </member>
        <member name="P:Nokia.Music.Commands.MixGroupsCommand.ExclusiveTag">
            <summary>
              Gets or sets the mix group exclusive tag.
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.MixGroupsCommand.Exclusivity">
            <summary>
              Gets or sets the mix group exclusivity tokens.
            </summary>
        </member>
        <member name="T:Nokia.Music.Commands.NewReleasesCommand">
            <summary>
            Gets a list of new releases
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.NewReleasesCommand.AppendUriPath(System.Text.StringBuilder)">
            <summary>
            Appends the uri subpath and parameters specific to this API method
            </summary>
            <param name="uri">The base uri</param>
        </member>
        <member name="P:Nokia.Music.Commands.NewReleasesCommand.Category">
            <summary>
            Gets or sets the category - only Album and Track lists are available.
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.NewReleasesCommand.GenreId">
            <summary>
            Gets or sets the genre ID to get results for.
            </summary>
        </member>
        <member name="T:Nokia.Music.Commands.ProductCommand">
            <summary>
              Gets a specific product.
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.ProductCommand.AppendUriPath(System.Text.StringBuilder)">
            <summary>
            Appends the uri subpath and parameters specific to this API method
            </summary>
            <param name="uri">The base uri</param>
        </member>
        <member name="P:Nokia.Music.Commands.ProductCommand.ProductId">
            <summary>
            Gets or sets the product id.
            </summary>
            <value>
            The product id.
            </value>
        </member>
        <member name="T:Nokia.Music.Commands.RawMusicClientCommand`1">
            <summary>
            Defines the Music Client Raw Command base class
            </summary>
            <typeparam name="TResult">The type of the returned object.</typeparam>
        </member>
        <member name="T:Nokia.Music.Commands.SearchArtistsCommand">
            <summary>
            Searches for an Artist
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.SearchArtistsCommand.SearchTerm">
            <summary>
            Gets or sets the search term.
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.SearchArtistsCommand.Location">
            <summary>
            Gets or sets the latitude and longitude to search around.
            </summary>
            <value>
            The location.
            </value>
        </member>
        <member name="P:Nokia.Music.Commands.SearchArtistsCommand.MaxDistance">
            <summary>
            Gets or sets the max distance to search around the location.
            </summary>
            <value>
            The max distance.
            </value>
        </member>
        <member name="T:Nokia.Music.Commands.SearchCommand">
            <summary>
            Searches the MixRadio Catalog
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.SearchCommand.CreateCatalogItemBasedOnCategory(Newtonsoft.Json.Linq.JToken,Nokia.Music.Internal.IMusicClientSettings)">
            <summary>
            Creates an CatalogItem based on it's category field
            </summary>
            <param name="item">The JSON item</param>
            <param name="settings">The settings.</param>
            <returns>
            An CatalogItem
            </returns>
            <remarks>
            Internal for testing purposes
            </remarks>
        </member>
        <member name="P:Nokia.Music.Commands.SearchCommand.SearchTerm">
            <summary>
            Gets or sets the search term.
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.SearchCommand.GenreId">
            <summary>
            Gets or sets the genre
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.SearchCommand.Id">
            <summary>
            Gets or sets the artist or product id
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.SearchCommand.MinBpm">
            <summary>
            Gets or sets the minimum BPM.
            </summary>
            <value>
            The minimum BPM.
            </value>
        </member>
        <member name="P:Nokia.Music.Commands.SearchCommand.MaxBpm">
            <summary>
            Gets or sets the maximum BPM.
            </summary>
            <value>
            The maximum BPM.
            </value>
        </member>
        <member name="T:Nokia.Music.Commands.SearchSuggestionsCommand">
            <summary>
            Gets suggestions for a search term
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.SearchSuggestionsCommand.AppendUriPath(System.Text.StringBuilder)">
            <summary>
            Appends the uri subpath and parameters specific to this API method
            </summary>
            <param name="uri">The base uri</param>
        </member>
        <member name="M:Nokia.Music.Commands.SearchSuggestionsCommand.ExtractStringFromJToken(Newtonsoft.Json.Linq.JToken,Nokia.Music.Internal.IMusicClientSettings)">
            <summary>
            Extracts a
            </summary>
            <param name="item">The item.</param>
            <param name="settings">The settings.</param>
            <returns>
            Returns the string value
            </returns>
        </member>
        <member name="P:Nokia.Music.Commands.SearchSuggestionsCommand.SearchTerm">
            <summary>
            Gets or sets the search term.
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.SearchSuggestionsCommand.SuggestArtists">
            <summary>
            Gets or sets a value indicating whether to restrict to artist suggestions
            </summary>
        </member>
        <member name="T:Nokia.Music.Commands.SimilarArtistsCommand">
            <summary>
            Gets similar artists to the supplied artist
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.SimilarArtistsCommand.AppendUriPath(System.Text.StringBuilder)">
            <summary>
            Appends the uri subpath and parameters specific to this API method
            </summary>
            <param name="uri">The base uri</param>
        </member>
        <member name="P:Nokia.Music.Commands.SimilarArtistsCommand.ArtistId">
            <summary>
            Gets or sets the artist id.
            </summary>
            <value>
            The artist id.
            </value>
        </member>
        <member name="T:Nokia.Music.Commands.SimilarProductsCommand">
            <summary>
             Gets similar products to the supplied product
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.SimilarProductsCommand.AppendUriPath(System.Text.StringBuilder)">
            <summary>
            Appends the uri subpath and parameters specific to this API method
            </summary>
            <param name="uri">The base uri</param>
        </member>
        <member name="P:Nokia.Music.Commands.SimilarProductsCommand.ProductId">
            <summary>
            Gets or sets the product id.
            </summary>
            <value>
            The product id.
            </value>
        </member>
        <member name="T:Nokia.Music.Commands.TopArtistsCommand">
            <summary>
              Gets top artists
            </summary>
        </member>
        <member name="P:Nokia.Music.Commands.TopArtistsCommand.GenreId">
            <summary>
            Gets or sets the genre ID to get results for.
            </summary>
        </member>
        <member name="T:Nokia.Music.Commands.TopProductsCommand">
            <summary>
            Gets a chart
            </summary>
        </member>
        <member name="M:Nokia.Music.Commands.TopProductsCommand.AppendUriPath(System.Text.StringBuilder)">
            <summary>
            Appends the uri subpath and parameters specific to this API method
            </summary>
            <param name="uri">The base uri</param>
        </member>
        <member name="P:Nokia.Music.Commands.TopProductsCommand.GenreId">
            <summary>
            Gets or sets the genre ID to get results for.
            </summary>
        </member>
        <member name="T:Nokia.Music.CountryResolver">
            <summary>
            The CountryResolver validates a country has availability for the MixRadio API
            </summary>
        </member>
        <member name="T:Nokia.Music.ICountryResolver">
            <summary>
            Defines the MixRadio Country Resolver API
            </summary>
        </member>
        <member name="M:Nokia.Music.ICountryResolver.CheckAvailabilityAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Validates that the MixRadio API is available for a country
            </summary>
            <param name="countryCode">The country code.</param>
            <param name="cancellationToken">An optional CancellationToken</param>
            <returns>A Response containing whether the API is available or not</returns>
        </member>
        <member name="M:Nokia.Music.CountryResolver.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.CountryResolver"/> class.
            </summary>
            <param name="clientId">The Application Client ID obtained during registration</param>
        </member>
        <member name="M:Nokia.Music.CountryResolver.#ctor(System.String,Nokia.Music.Internal.Request.IApiRequestHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.CountryResolver"/> class.
            </summary>
            <param name="clientId">The Application Client ID obtained during registration</param>
            <param name="requestHandler">The request handler.</param>
            <remarks>
            Allows custom requestHandler for testing purposes
            </remarks>
        </member>
        <member name="M:Nokia.Music.CountryResolver.CheckAvailabilityAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Validates that the MixRadio API is available for a country
            </summary>
            <param name="countryCode">The country code.</param>
            <param name="cancellationToken">An optional CancellationToken</param>
            <returns>
            A Response containing whether the API is available or not
            </returns>
        </member>
        <member name="M:Nokia.Music.CountryResolver.ValidateCountryCode(System.String)">
            <summary>
            Validates a country code.
            </summary>
            <param name="countryCode">The country code.</param>
            <returns>A Boolean indicating that the country code is valid</returns>
        </member>
        <member name="P:Nokia.Music.CountryResolver.ClientId">
            <summary>
            Gets the client id.
            </summary>
            <value>
            The client id.
            </value>
        </member>
        <member name="P:Nokia.Music.CountryResolver.RequestHandler">
            <summary>
            Gets the request handler in use for testing purposes.
            </summary>
            <value>
            The request handler.
            </value>
        </member>
        <member name="T:Nokia.Music.ApiCallCancelledException">
            <summary>
            Exception when an API call gets cancelled
            </summary>
        </member>
        <member name="T:Nokia.Music.NokiaMusicException">
            <summary>
            Generic MixRadio Exception.
            </summary>
        </member>
        <member name="M:Nokia.Music.NokiaMusicException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.NokiaMusicException"/> class with a specified error message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Nokia.Music.ApiCallCancelledException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.ApiCallCancelledException"/> class.
            </summary>
        </member>
        <member name="T:Nokia.Music.ApiCallFailedException">
            <summary>
            Exception when an API call fails unexpectedly
            </summary>
        </member>
        <member name="M:Nokia.Music.ApiCallFailedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.ApiCallFailedException"/> class.
            </summary>
        </member>
        <member name="M:Nokia.Music.ApiCallFailedException.#ctor(System.Nullable{System.Net.HttpStatusCode})">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.ApiCallFailedException"/> class.
            </summary>
            <param name="statusCode">Details to append to the exception message</param>
        </member>
        <member name="P:Nokia.Music.ApiCallFailedException.StatusCode">
            <summary>
            Gets the HTTP status code that caused the exception to be constructed
            </summary>
        </member>
        <member name="T:Nokia.Music.ApiCredentialsRequiredException">
            <summary>
            Exception when no API key has been supplied
            </summary>
        </member>
        <member name="M:Nokia.Music.ApiCredentialsRequiredException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.ApiCredentialsRequiredException"/> class.
            </summary>
        </member>
        <member name="T:Nokia.Music.ApiNotAvailableException">
            <summary>
            Exception when an the API is not available in the current region
            </summary>
        </member>
        <member name="M:Nokia.Music.ApiNotAvailableException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.ApiNotAvailableException"/> class.
            </summary>
        </member>
        <member name="T:Nokia.Music.NetworkLimitedException">
            <summary>
            Exception when attempting to call the API with a limited network.
            </summary>
        </member>
        <member name="M:Nokia.Music.NetworkLimitedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.NetworkLimitedException"/> class.
            </summary>
        </member>
        <member name="M:Nokia.Music.NetworkLimitedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.NetworkLimitedException"/> class.
            </summary>
            <param name="message">
            A more specific message indicating reasons for the error.
            </param>
        </member>
        <member name="T:Nokia.Music.NetworkUnavailableException">
            <summary>
            Exception when attempting to call the API without a working network.
            </summary>
        </member>
        <member name="M:Nokia.Music.NetworkUnavailableException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.NetworkUnavailableException"/> class.
            </summary>
        </member>
        <member name="M:Nokia.Music.NetworkUnavailableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.NetworkUnavailableException"/> class.
            </summary>
            <param name="message">
            A more specific message indicating reasons for the error.
            </param>
        </member>
        <member name="T:Nokia.Music.SendFailureException">
            <summary>
            Exception thrown when there was a problem with sending request
            </summary>
        </member>
        <member name="M:Nokia.Music.SendFailureException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.SendFailureException"/> class.
            </summary>
        </member>
        <member name="T:Nokia.Music.UserAuthRequiredException">
            <summary>
            Exception when an API method requires user authorization
            </summary>
        </member>
        <member name="M:Nokia.Music.UserAuthRequiredException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.UserAuthRequiredException"/> class.
            </summary>
        </member>
        <member name="T:Nokia.Music.CountryCodeRequiredException">
            <summary>
            Exception when no country has been supplied
            </summary>
        </member>
        <member name="M:Nokia.Music.CountryCodeRequiredException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.CountryCodeRequiredException"/> class.
            </summary>
        </member>
        <member name="T:Nokia.Music.InvalidApiCredentialsException">
            <summary>
            Exception when invalid API credentials have been supplied
            </summary>
        </member>
        <member name="M:Nokia.Music.InvalidApiCredentialsException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.InvalidApiCredentialsException"/> class.
            </summary>
        </member>
        <member name="T:Nokia.Music.InvalidCountryCodeException">
            <summary>
            Exception when an invalid country code has been supplied
            </summary>
        </member>
        <member name="M:Nokia.Music.InvalidCountryCodeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.InvalidCountryCodeException"/> class.
            </summary>
        </member>
        <member name="T:Nokia.Music.IMusicClient">
            <summary>
            Defines the MixRadio API
            </summary>
        </member>
        <member name="M:Nokia.Music.IMusicClient.SearchArtistsAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Searches for an Artist
            </summary>
            <param name="searchTerm">The search term.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="requestId">Id of the request.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Artists or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetArtistSearchSuggestionsAsync(System.String,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets artist search suggestions.
            </summary>
            <param name="searchTerm">The search term.</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="requestId">Id of the request.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing search suggestions</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetArtistsAroundLocationAsync(System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets artists that originate around a specified location
            </summary>
            <param name="latitude">The latitude to search around</param>
            <param name="longitude">The longitude to search around</param>
            <param name="maxdistance">The max distance (in KM) around the location to search</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Artists or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetTopArtistsAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the top artists
            </summary>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Artists or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetTopArtistsForGenreAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the top artists for a genre
            </summary>
            <param name="id">The genre to get results for.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Artists or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetTopArtistsForGenreAsync(Nokia.Music.Types.Genre,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the top artists for a genre
            </summary>
            <param name="genre">The genre to get results for.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Artists or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetArtistAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets an artist by id
            </summary>
            <param name="id">The artist id.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A Response containing a Artist or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetSimilarArtistsAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets similar artists for an artist.
            </summary>
            <param name="id">The artist id.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Artists or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetSimilarArtistsAsync(Nokia.Music.Types.Artist,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets similar artists for an artist.
            </summary>
            <param name="artist">The artist.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Artists or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetArtistProductsAsync(System.String,System.Nullable{Nokia.Music.Types.Category},System.Nullable{Nokia.Music.Types.OrderBy},System.Nullable{Nokia.Music.Types.SortOrder},System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets products by an artist.
            </summary>
            <param name="id">The artist id.</param>
            <param name="category">The category.</param>
            <param name="orderBy">The field to sort the items by.</param>
            <param name="sortOrder">The sort order of the items.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Products or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetArtistProductsAsync(Nokia.Music.Types.Artist,System.Nullable{Nokia.Music.Types.Category},System.Nullable{Nokia.Music.Types.OrderBy},System.Nullable{Nokia.Music.Types.SortOrder},System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets products by an artist.
            </summary>
            <param name="artist">The artist.</param>
            <param name="category">The category.</param>
            <param name="orderBy">The field to sort the items by.</param>
            <param name="sortOrder">The sort order of the items.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Products or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetProductAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a product by id
            </summary>
            <param name="id">The product id.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A Response containing a Product or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetMixAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a mix by id
            </summary>
            <param name="id">The mix id.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A Mix or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetTrackSampleUri(System.String)">
            <summary>
            Gets a track sample uri.
            </summary>
            <param name="id">The product id.</param>
            <returns>
            A uri to a sample clip of the track
            </returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetSimilarProductsAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets similar products for the supplied product.
            </summary>
            <param name="id">The product id.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Products or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetSimilarProductsAsync(Nokia.Music.Types.Product,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets similar products for the supplied product.
            </summary>
            <param name="product">The product.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Products or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetTopProductsAsync(Nokia.Music.Types.Category,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a chart
            </summary>
            <param name="category">The category - only Album and Track charts are available.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Products or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetTopProductsForGenreAsync(System.String,Nokia.Music.Types.Category,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a chart
            </summary>
            <param name="id">The genre id.</param>
            <param name="category">The category - only Album and Track charts are available.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Products or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetTopProductsForGenreAsync(Nokia.Music.Types.Genre,Nokia.Music.Types.Category,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a chart
            </summary>
            <param name="genre">The genre.</param>
            <param name="category">The category - only Album and Track charts are available.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Products or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetNewReleasesAsync(Nokia.Music.Types.Category,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a list of new releases
            </summary>
            <param name="category">The category - only Album and Track lists are available.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Products or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetNewReleasesForGenreAsync(System.String,Nokia.Music.Types.Category,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a list of new releases
            </summary>
            <param name="id">The genre id.</param>
            <param name="category">The category - only Album and Track lists are available.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Products or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetNewReleasesForGenreAsync(Nokia.Music.Types.Genre,Nokia.Music.Types.Category,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a list of new releases
            </summary>
            <param name="genre">The genre.</param>
            <param name="category">The category - only Album and Track lists are available.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Products or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetGenresAsync(System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the available genres
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Genres or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.SearchAsync(System.String,System.Nullable{Nokia.Music.Types.Category},System.String,System.Nullable{Nokia.Music.Types.OrderBy},System.Nullable{Nokia.Music.Types.SortOrder},System.Int32,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Searches MixRadio
            </summary>
            <param name="searchTerm">Optional search term.</param>
            <param name="category">Optional category.</param>
            <param name="genreId">Optional genre id</param>
            <param name="orderBy">The field to sort the items by.</param>
            <param name="sortOrder">The sort order of the items.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="requestId">Id of the request.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <remarks>A searchTerm or genreId should be supplied</remarks>
            <returns>A ListResponse containing MusicItems or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.SearchBpmAsync(System.Int32,System.Int32,System.String,System.Nullable{Nokia.Music.Types.OrderBy},System.Nullable{Nokia.Music.Types.SortOrder},System.Int32,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Searches for tracks with a Beats per Minute range.
            </summary>
            <param name="minBpm">The minimum BPM.</param>
            <param name="maxBpm">The maximum BPM.</param>
            <param name="genreId">The genre identifier.</param>
            <param name="orderBy">The order by.</param>
            <param name="sortOrder">The sort order.</param>
            <param name="startIndex">The start index.</param>
            <param name="itemsPerPage">The items per page.</param>
            <param name="requestId">The request identifier.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A list of tracks</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetSearchSuggestionsAsync(System.String,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets search suggestions.
            </summary>
            <param name="searchTerm">The search term.</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="requestId">Id of the request.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing search suggestions</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetMixGroupsAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the Mix Groups available
            </summary>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing MixGroups or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetMixGroupsAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the Mix Groups available
            </summary>
            <param name="exclusiveTag">The exclusive tag.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing MixGroups or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetAllMixesAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets all Mixes available, regardless of grouping
            </summary>
            <param name="exclusiveTag">The optional exclusivity tag.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Mixes or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetMixesAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the Mixes available in a group
            </summary>
            <param name="id">The mix group id.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Mixes or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetMixesAsync(System.String,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the Mixes available in a group
            </summary>
            <param name="id">The mix group id.</param>
            <param name="exclusiveTag">The exclusive tag.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Mixes or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetMixesAsync(Nokia.Music.Types.MixGroup,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the Mixes available in a group
            </summary>
            <param name="group">The mix group.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Mixes or an Error</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetMixesAsync(Nokia.Music.Types.MixGroup,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the Mixes available in a group
            </summary>
            <param name="group">The mix group.</param>
            <param name="exclusiveTag">The exclusive tag.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Mixes or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetLanguagesAsync(System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets all languages
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing the available languages</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.AuthenticateUserAsync(System.String,Nokia.Music.Types.Scope,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Authenticates a user to enable the user data APIs.
            </summary>
            <param name="clientSecret">The client secret obtained during app registration</param>
            <param name="scopes">The scopes requested.</param>
            <param name="oauthRedirectUri">The OAuth completed URI.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            An AuthResultCode indicating the result
            </returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.AuthenticateUserAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Attempts to authenticate a user to enable the user data APIs using a cached access token.
            </summary>
            <param name="clientSecret">The client secret obtained during app registration</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            An AuthResultCode indicating the result
            </returns>
            <remarks>This overload of AuthenticateUserAsync can only be used once the user has gone through the OAuth flow and given permission to access their data</remarks>
        </member>
        <member name="M:Nokia.Music.IMusicClient.DeleteAuthenticationTokenAsync(System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes any cached authentication token.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>An async task</returns>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetUserPlayHistoryAsync(System.Nullable{Nokia.Music.Types.UserEventAction},System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the user play history.
            </summary>
            <param name="action">The event action to filter results by.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A list of play history events</returns>
            <remarks>Requires the ReadUserPlayHistory scope</remarks>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetUserTopArtistsAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the top artists chart for the user
            </summary>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <param name="itemsPerPage">The items per page.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A list of artists</returns>
            <remarks>Charts are available for the last week</remarks>
        </member>
        <member name="M:Nokia.Music.IMusicClient.GetUserRecentMixesAsync(System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a list of recent mixes played by the user
            </summary>
            <param name="itemsPerPage">The items per page.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A list of mixes</returns>
            <remarks>Charts are available for the last week</remarks>
        </member>
        <member name="M:Nokia.Music.Internal.ArtistImageUriWriter.BuildForId(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Return an image uri based on the artist id
            </summary>
            <param name="artistId">Artist Name</param>
            <param name="width">width of image</param>
            <param name="height">height of image</param>
            <returns>Image uri</returns>
        </member>
        <member name="M:Nokia.Music.Internal.ArtistImageUriWriter.BuildForName(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Return an image uri based on the artist name
            </summary>
            <param name="artistName">Artist Name</param>
            <param name="width">width of image</param>
            <param name="height">height of image</param>
            <returns>Image uri</returns>
        </member>
        <member name="T:Nokia.Music.Internal.Authorization.IAuthHeaderDataProvider">
            <summary>
            Allows a client to specify settings required to build an OAuth2 request
            </summary>
        </member>
        <member name="T:Nokia.Music.Internal.Authorization.IUserIdProvider">
            <summary>
            Allows a client to specify the current user id
            </summary>
        </member>
        <member name="M:Nokia.Music.Internal.Authorization.IUserIdProvider.GetUserIdAsync">
            <summary>
            Gets the UserID.
            </summary>
            <returns>The UserID</returns>
        </member>
        <member name="M:Nokia.Music.Internal.Authorization.IAuthHeaderDataProvider.GetUserTokenAsync">
            <summary>
            Gets the user token.
            </summary>
            <returns>The user token for authenticating against the REST API</returns>
        </member>
        <member name="T:Nokia.Music.Internal.Authorization.OAuth2">
            <summary>
            Represents OAuth2 request
            </summary>
        </member>
        <member name="M:Nokia.Music.Internal.Authorization.OAuth2.#ctor(Nokia.Music.Internal.Authorization.IAuthHeaderDataProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Internal.Authorization.OAuth2"/> class.
            </summary>
            <param name="authHeaderData">The auth header data.</param>
        </member>
        <member name="M:Nokia.Music.Internal.Authorization.OAuth2.CreateHeadersAsync">
            <summary>
            Creates the headers.
            </summary>
            <returns>A Dictionary of headers</returns>
        </member>
        <member name="T:Nokia.Music.Internal.Authorization.OAuthHeaderDataProvider">
            <summary>
            Implementation of IAuthHeaderDataProvider
            </summary>
        </member>
        <member name="M:Nokia.Music.Internal.Authorization.OAuthHeaderDataProvider.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Internal.Authorization.OAuthHeaderDataProvider"/> class.
            </summary>
            <param name="userToken">The user token.</param>
            <param name="userId">The user id.</param>
        </member>
        <member name="T:Nokia.Music.Internal.Authorization.OAuthResultParser">
            <summary>
            Helper method(s) for obtaining OAuth Results
            <remarks>
            see http://tools.ietf.org/html/rfc6749#section-4.1.2.1
            </remarks>
            </summary>
        </member>
        <member name="M:Nokia.Music.Internal.Authorization.OAuthResultParser.ToAuthResultReason(System.String)">
            <summary>
            Attempts to convert an OAuth2 error code to a AuthResultCode value
            </summary>
            <param name="errorCode">The error code.</param>
            <returns>
            A AuthResultCode representation of error code
            </returns>
        </member>
        <member name="M:Nokia.Music.Internal.Authorization.OAuthResultParser.ParseQuerystringForCompletedFlags(System.String,Nokia.Music.Types.AuthResultCode@,System.String@)">
            <summary>
            Parses the querystring for completed flags.
            </summary>
            <param name="querystring">The querystring.</param>
            <param name="resultCode">The result.</param>
            <param name="authorizationCode">The authorization code if one was returned.</param>
            <returns>
            A boolean indicating that we found appropriate flags to end the flow
            </returns>
        </member>
        <member name="T:Nokia.Music.Internal.Authorization.OAuthUserFlow">
            <summary>
            Class that handles user OAuth flow.
            </summary>
        </member>
        <member name="M:Nokia.Music.Internal.Authorization.OAuthUserFlow.#ctor(System.String,System.String,System.String,Nokia.Music.Commands.GetAuthTokenCommand)">
            <summary>
            Initialises the OAuthUserFlow class
            </summary>
            <param name="clientId">The client id.</param>
            <param name="clientSecret">The client secret.</param>
            <param name="secureBaseApiUri">The secure base API URI.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:Nokia.Music.Internal.Authorization.OAuthUserFlow.AuthenticateUserAsync(System.Uri,Nokia.Music.Types.Scope,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Authenticates a user to enable the user data APIs.
            </summary>
            <param name="oauthCompletedUri">The OAuth completed URI.</param>
            <param name="scopes">The scopes requested.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            An AuthResultCode value indicating the result
            </returns>
        </member>
        <member name="M:Nokia.Music.Internal.Authorization.OAuthUserFlow.ConstructAuthorizeUri(Nokia.Music.Types.Scope)">
            <summary>
            Constructs the URI for the authorize resource
            </summary>
            <param name="scopes">The requested scopes</param>
            <returns>A URI to start the OAuth flow</returns>
        </member>
        <member name="M:Nokia.Music.Internal.Authorization.OAuthUserFlow.ConvertAuthPermissionParams(Windows.Security.Authentication.Web.WebAuthenticationResult)">
            <summary>
            Continues the authenticate user flow by extracting results from the Windows-specific
            auth method and moving on to the final common step.
            </summary>
            <param name="authResult">The result from the WebAuthenticationBroker call.</param>
            <returns>
            Whether the token was retrieved
            </returns>
        </member>
        <member name="M:Nokia.Music.Internal.Authorization.OAuthUserFlow.ObtainToken(System.String,System.String,Nokia.Music.Types.AuthResultCode,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Finalises authorisation to obtain a token
            </summary>
            <param name="authorizationCode">The authorization code.</param>
            <param name="refreshToken">The refresh token.</param>
            <param name="resultCode">The result code for the process so far.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            Whether the token was retrieved
            </returns>
        </member>
        <member name="P:Nokia.Music.Internal.Authorization.OAuthUserFlow.TokenResponse">
            <summary>
            Gets the token response.
            </summary>
            <value>
            The token response.
            </value>
        </member>
        <member name="T:Nokia.Music.Internal.Authorization.TokenResponse">
            <summary>
            Represents an Access Token Response
            </summary>
        </member>
        <member name="M:Nokia.Music.Internal.Authorization.TokenResponse.FromJToken(Newtonsoft.Json.Linq.JToken,Nokia.Music.Internal.IMusicClientSettings)">
            <summary>
            Deserializes from JSON
            </summary>
            <param name="item">The json</param>
            <param name="settings">The settings.</param>
            <returns>
            An AccessToken instance
            </returns>
        </member>
        <member name="M:Nokia.Music.Internal.Authorization.TokenResponse.UpdateExpiresUtc(System.DateTime)">
            <summary>
            Sets an explicit expiry datetime and allow a bit of buffer when we do it (1 minute)...
            </summary>
            <param name="serverTimeUtc">The current server time</param>
        </member>
        <member name="M:Nokia.Music.Internal.Authorization.TokenResponse.ToJToken">
            <summary>
            Converts this object to a JSON representation
            </summary>
            <returns>JSON representation</returns>
        </member>
        <member name="P:Nokia.Music.Internal.Authorization.TokenResponse.AccessToken">
            <summary>
            Gets or sets the actual access token.
            </summary>
            <value>
            The access token.
            </value>
        </member>
        <member name="P:Nokia.Music.Internal.Authorization.TokenResponse.ExpiresUtc">
            <summary>
            Gets or sets when the token expires.
            </summary>
            <value>
            The seconds until the token expires.
            </value>
        </member>
        <member name="P:Nokia.Music.Internal.Authorization.TokenResponse.ExpiresIn">
            <summary>
            Gets or sets when the token expires - this is derived from ExpiresIn.
            </summary>
            <value>
            The expires date time.
            </value>
        </member>
        <member name="P:Nokia.Music.Internal.Authorization.TokenResponse.RefreshToken">
            <summary>
            Gets or sets the refresh token.
            </summary>
            <value>
            The refresh token.
            </value>
        </member>
        <member name="P:Nokia.Music.Internal.Authorization.TokenResponse.Territory">
            <summary>
            Gets or sets the territory.
            </summary>
            <value>
            The territory.
            </value>
        </member>
        <member name="P:Nokia.Music.Internal.Authorization.TokenResponse.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="P:Nokia.Music.Internal.Authorization.TokenResponse.Scopes">
            <summary>
            Gets or sets the yielded scopes from the response
            </summary>
        </member>
        <member name="T:Nokia.Music.Internal.EncryptionHelper">
            <summary>
            Encryption helper class
            </summary>
        </member>
        <member name="T:Nokia.Music.Internal.Parsing.IJsonProcessor">
            <summary>
            Provides a common interface for parsing different kinds of lists
            </summary>
        </member>
        <member name="M:Nokia.Music.Internal.Parsing.IJsonProcessor.ParseList``1(Newtonsoft.Json.Linq.JToken,System.String,Nokia.Music.Commands.MusicClientCommand.JTokenConversionDelegate{``0},Nokia.Music.Internal.IMusicClientSettings)">
            <summary>
            Parses a particular type of Json list
            </summary>
            <typeparam name="T">The type being parsed</typeparam>
            <param name="rawJson">The raw json</param>
            <param name="listName">The name of the list if appropriate eg. items</param>
            <param name="converter">A delegate that can parse each object of type T</param>
            <param name="settings">The settings.</param>
            <returns>
            A list of type T
            </returns>
        </member>
        <member name="M:Nokia.Music.Internal.Parsing.ArrayJsonProcessor.ParseList``1(Newtonsoft.Json.Linq.JToken,System.String,Nokia.Music.Commands.MusicClientCommand.JTokenConversionDelegate{``0},Nokia.Music.Internal.IMusicClientSettings)">
            <summary>
            Parses a json array
            </summary>
            <typeparam name="T">The type being parsed</typeparam>
            <param name="rawJson">The raw json</param>
            <param name="listName">The name of the list</param>
            <param name="converter">A delegate that can parse each object of type T</param>
            <param name="settings">The settings.</param>
            <returns>
            A list of type T of each of the items in the array
            </returns>
        </member>
        <member name="T:Nokia.Music.Internal.Parsing.NamedItemListJsonProcessor">
            <summary>
            The typical parsing mechanism for json list responses
            </summary>
        </member>
        <member name="M:Nokia.Music.Internal.Parsing.NamedItemListJsonProcessor.ParseList``1(Newtonsoft.Json.Linq.JToken,System.String,Nokia.Music.Commands.MusicClientCommand.JTokenConversionDelegate{``0},Nokia.Music.Internal.IMusicClientSettings)">
            <summary>
            Parses a named json list.
            </summary>
            <typeparam name="T">The type being parsed</typeparam>
            <param name="rawJson">The raw json</param>
            <param name="listName">The name of the list if appropriate eg. items</param>
            <param name="converter">A delegate that can parse each object of type T</param>
            <param name="settings">The settings.</param>
            <returns>
            A list of type T
            </returns>
        </member>
        <member name="M:Nokia.Music.Internal.Parsing.ParseHelper.ParseEnumOrDefault``1(System.String,``0)">
            <summary>
            Returns a matching enum value for specified string
            </summary>
            <typeparam name="T">The enum type</typeparam>
            <param name="value">The response value</param>
            <param name="defaultValue">The default value to return if unable to parse</param>
            <returns>The matching value or the default value which should be unknown or none</returns>
        </member>
        <member name="M:Nokia.Music.Internal.Parsing.ParseHelper.ParseWithDate(System.String)">
            <summary>
            Loads a JObject from the json.
            If you use JObject.Parse it automatically changes the date to utc.
            This keeps the date as it is in the json, allowing us to use local dates.
            </summary>
            <param name="json">The json string.</param>
            <returns>The jobject</returns>
        </member>
        <member name="T:Nokia.Music.Internal.Request.ApiRequestHandler">
            <summary>
            Implementation of the raw API interface for making requests
            </summary>
        </member>
        <member name="T:Nokia.Music.Internal.Request.IApiRequestHandler">
            <summary>
            Defines the raw API interface for making requests
            </summary>
        </member>
        <member name="M:Nokia.Music.Internal.Request.IApiRequestHandler.SendRequestAsync``1(Nokia.Music.Commands.MusicClientCommand,Nokia.Music.Internal.IMusicClientSettings,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Func{System.String,``0},System.Collections.Generic.Dictionary{System.String,System.String},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Makes the API request
            </summary>
            <typeparam name="T">The type of response</typeparam>
            <param name="command">The command to call.</param>
            <param name="settings">The music client settings.</param>
            <param name="queryParams">The queryString parameters.</param>
            <param name="rawDataHandler">The convertion handler for the data received.</param>
            <param name="requestHeaders">HTTP headers to add to the request</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A response for the API request.</returns>
        </member>
        <member name="P:Nokia.Music.Internal.Request.IApiRequestHandler.UriBuilder">
            <summary>
            Gets the URI builder that is being used.
            </summary>
            <value>
            The URI builder.
            </value>
        </member>
        <member name="P:Nokia.Music.Internal.Request.IApiRequestHandler.ServerTimeUtc">
            <summary>
            Gets the server UTC time.
            </summary>
            <value>
            The server UTC time.
            </value>
        </member>
        <member name="M:Nokia.Music.Internal.Request.ApiRequestHandler.#ctor(Nokia.Music.Internal.Request.IApiUriBuilder,System.String,Nokia.Music.Internal.Request.IHttpClientRequestProxy)">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Internal.Request.ApiRequestHandler"/> class.
            </summary>
            <param name="uriBuilder">The URI builder.</param>
            <param name="userAgent">The UserAgent header to be sent in requests.</param>
            <param name="requestProxy">The proxy class responsible for making the request</param>
        </member>
        <member name="M:Nokia.Music.Internal.Request.ApiRequestHandler.SendRequestAsync``1(Nokia.Music.Commands.MusicClientCommand,Nokia.Music.Internal.IMusicClientSettings,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Func{System.String,``0},System.Collections.Generic.Dictionary{System.String,System.String},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Makes the API request
            </summary>
            <typeparam name="T">The type of response</typeparam>
            <param name="command">The command to call.</param>
            <param name="settings">The music client settings.</param>
            <param name="queryParams">The querystring.</param>
            <param name="rawDataHandler">The convertion handler for the data received.</param>
            <param name="requestHeaders">HTTP headers to add to the request</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A response for the API request.</returns>
        </member>
        <member name="M:Nokia.Music.Internal.Request.ApiRequestHandler.DeriveServerTimeOffset(System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})">
            <summary>
            Derives the server time offset from the Date and Age headers.
            </summary>
            <param name="date">The response Date header value.</param>
            <param name="age">The response Age header value.</param>
        </member>
        <member name="M:Nokia.Music.Internal.Request.ApiRequestHandler.BuildRequestBody(Nokia.Music.Commands.MusicClientCommand,System.Net.Http.HttpRequestMessage)">
            <summary>
            Builds and gzips the request body if required
            </summary>
            <param name="command">The command</param>
            <param name="request">The request information</param>
        </member>
        <member name="M:Nokia.Music.Internal.Request.ApiRequestHandler.IsFake404(System.Net.Http.HttpResponseMessage)">
            <summary>
            Determines the difference between a 404 explicitly delivered by a service and a 404 response from WP while offline
            </summary>
            <param name="response">The web response</param>
            <returns>True if this 404 was provided by the WP platform without making a request</returns>
        </member>
        <member name="M:Nokia.Music.Internal.Request.ApiRequestHandler.PrepareResponse``1(``0,System.Nullable{System.Net.HttpStatusCode},System.String,System.Exception,System.String,System.Guid,System.Uri,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Logs the response and makes the callback
            </summary>
            <typeparam name="T">The type of response item</typeparam>
            <param name="response">The response item</param>
            <param name="statusCode">The response status code</param>
            <param name="contentType">The response content type</param>
            <param name="error">An error or null if successful</param>
            <param name="responseBody">The response body</param>
            <param name="requestId">The unique id of this request</param>
            <param name="uri">The uri requested</param>
            <param name="mixRadioHeaderFound">Indicates whether the X-MixRadio header was missing in the response</param>
            <param name="offlineNotFoundResponse">Indicates whether this is a 'fake' 404 that WP can provide while offline</param>
            <returns>A response</returns>
        </member>
        <member name="M:Nokia.Music.Internal.Request.ApiRequestHandler.CreateHandler(System.Boolean)">
            <summary>
            Creates an implementation of the abstract class HttpMessageHandler for use by the HttpClient.
            </summary>
            <param name="followHttpRedirects">If true, clients should automatically follow HTTP redirects; if false this will not be done.</param>
            <returns>An implementation of the HttpMessageHandler suitable for the current platform.</returns>
        </member>
        <member name="P:Nokia.Music.Internal.Request.ApiRequestHandler.UriBuilder">
            <summary>
            Gets the URI builder that is being used.
            </summary>
            <value>
            The URI builder.
            </value>
        </member>
        <member name="P:Nokia.Music.Internal.Request.ApiRequestHandler.ServerTimeUtc">
            <summary>
            Gets the server UTC time.
            </summary>
            <value>
            The server UTC time.
            </value>
        </member>
        <member name="T:Nokia.Music.Internal.Request.ApiUriBuilder">
            <summary>
            Defines the real Uri Builder
            </summary>
        </member>
        <member name="T:Nokia.Music.Internal.Request.IApiUriBuilder">
            <summary>
            Defines the API URI Builder interface
            </summary>
        </member>
        <member name="M:Nokia.Music.Internal.Request.IApiUriBuilder.BuildUri(Nokia.Music.Commands.MusicClientCommand,Nokia.Music.Internal.IMusicClientSettings,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Builds an API URI
            </summary>
            <param name="command">The command to call.</param>
            <param name="settings">The client settings.</param>
            <param name="queryParams">The querystring.</param>
            <returns>
            A Uri to call
            </returns>
        </member>
        <member name="M:Nokia.Music.Internal.Request.ApiUriBuilder.BuildUri(Nokia.Music.Commands.MusicClientCommand,Nokia.Music.Internal.IMusicClientSettings,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Builds an API URI
            </summary>
            <param name="command">The command to call.</param>
            <param name="settings">The music client settings.</param>
            <param name="queryParams">The querystring parameters</param>
            <returns>
            A Uri to call
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when an unknown method is used</exception>
            <exception cref="T:Nokia.Music.CountryCodeRequiredException">Thrown when a CountryCode is required but not supplied</exception>
            <exception cref="T:Nokia.Music.ApiCredentialsRequiredException">Thrown when an API Key has not been supplied</exception>
            <exception cref="T:System.ArgumentNullException"></exception>        
        </member>
        <member name="M:Nokia.Music.Internal.Request.ApiUriBuilder.AddAuthorisationParams(System.Text.StringBuilder,Nokia.Music.Internal.IMusicClientSettings)">
            <summary>
            Adds authorisation parameters to the querystring
            </summary>
            <param name="url">The url being built.</param>
            <param name="settings">The music client settings.</param>
        </member>
        <member name="M:Nokia.Music.Internal.Request.ApiUriBuilder.AddCountryCode(System.Text.StringBuilder,Nokia.Music.Commands.MusicClientCommand,System.String)">
            <summary>
            Validates and adds country code if required
            </summary>
            <param name="url">The url being built</param>
            <param name="command">The command to call.</param>
            <param name="countryCode">The country code.</param>
        </member>
        <member name="M:Nokia.Music.Internal.Request.ApiUriBuilder.AppendQueryString(System.Text.StringBuilder,Nokia.Music.Commands.MusicClientCommand,Nokia.Music.Internal.IMusicClientSettings,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Appends the appropriate query string parameters to the url
            </summary>
            <param name="url">The url being built.</param>
            <param name="command">The command for the url being built</param>
            <param name="settings">The music client settings.</param>
            <param name="queryParams">The query string.</param>
        </member>
        <member name="T:Nokia.Music.Internal.Request.GzippedContent">
            <summary>
            Provides GZip sending of data
            </summary>
        </member>
        <member name="M:Nokia.Music.Internal.Request.GzippedContent.#ctor(System.Net.Http.HttpContent)">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Internal.Request.GzippedContent"/> class.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:Nokia.Music.Internal.Request.GzippedContent.TryComputeLength(System.Int64@)">
            <summary>
            Determines whether the HTTP content has a valid length in bytes.
            </summary>
            <param name="length">The length in bytes of the HTTP content.</param>
            <returns>
            Returns <see cref="T:System.Boolean" />.true if <paramref name="length" /> is a valid length; otherwise, false.
            </returns>
        </member>
        <member name="M:Nokia.Music.Internal.Request.GzippedContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
            <summary>
            Serialize the HTTP content to a stream as an asynchronous operation.
            </summary>
            <param name="stream">The target stream.</param>
            <param name="context">Information about the transport (channel binding token, for example). This parameter may be null.</param>
            <returns>
            Returns <see cref="T:System.Threading.Tasks.Task" />.The task object representing the asynchronous operation.
            </returns>
        </member>
        <member name="T:Nokia.Music.Internal.Request.HttpClientRequestProxy">
            <summary>
            Responsible for sending the HTTPClient request
            </summary>
        </member>
        <member name="T:Nokia.Music.Internal.Request.IHttpClientRequestProxy">
            <summary>
            Abstracts the sending of the HTTPClient request for testability
            </summary>
        </member>
        <member name="M:Nokia.Music.Internal.Request.IHttpClientRequestProxy.SendRequestAsync(System.Net.Http.HttpClient,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Sends the request
            </summary>
            <param name="client">The HTTPClient instance</param>
            <param name="request">The request information</param>
            <param name="activeCancellationToken">The cancellation request</param>
            <returns>The http response </returns>
        </member>
        <member name="M:Nokia.Music.Internal.Request.HttpClientRequestProxy.SendRequestAsync(System.Net.Http.HttpClient,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Sends the request
            </summary>
            <param name="client">The HTTPClient instance</param>
            <param name="request">The request information</param>
            <param name="activeCancellationToken">The cancellation request</param>
            <returns>The http response </returns>
        </member>
        <member name="M:Nokia.Music.Internal.Response.ResponseInfo.#ctor(System.Uri,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{System.String}})">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Internal.Response.ResponseInfo"/> class.
            </summary>
            <param name="responseUri">The response URI.</param>
            <param name="headers">The headers.</param>
        </member>
        <member name="P:Nokia.Music.Internal.Response.ResponseInfo.ResponseUri">
            <summary>
            Gets the response URI.
            </summary>
            <value>
            The response URI.
            </value>
        </member>
        <member name="P:Nokia.Music.Internal.Response.ResponseInfo.Headers">
            <summary>
            Gets the headers.
            </summary>
            <value>
            The headers.
            </value>
        </member>
        <member name="T:Nokia.Music.Internal.StorageHelper">
            <summary>
            StorageHelper is a high-level isolated storage abstraction
            </summary>
        </member>
        <member name="M:Nokia.Music.Internal.StorageHelper.FileExistsAsync(System.String)">
            <summary>
            Checks if a file exists
            </summary>
            <param name="fileName">The file to check</param>
            <returns>Whether the file exists</returns>
        </member>
        <member name="M:Nokia.Music.Internal.StorageHelper.ReadTextAsync(System.String)">
            <summary>
            Returns the text from a file
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>The string contents or null</returns>
        </member>
        <member name="M:Nokia.Music.Internal.StorageHelper.WriteTextAsync(System.String,System.String)">
            <summary>
            Writes text to a file
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="content">The content.</param>
            <returns>An async task</returns>
        </member>
        <member name="M:Nokia.Music.Internal.StorageHelper.DeleteFileAsync(System.String)">
            <summary>
            Deletes a file
            </summary>
            <param name="fileName">The file to delete</param>
            <returns>An async task</returns>
        </member>
        <member name="T:Nokia.Music.ListResponse`1">
            <summary>
            Contains the result or the error if an error occurred.
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
        </member>
        <member name="T:Nokia.Music.Response`1">
            <summary>
            Contains the result or the error if an error occurred.
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
        </member>
        <member name="T:Nokia.Music.Response">
            <summary>
            Contains the result status code and the error if an error occurred.
            </summary>
        </member>
        <member name="M:Nokia.Music.Response.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Response"/> class.
            </summary>
        </member>
        <member name="M:Nokia.Music.Response.#ctor(System.Nullable{System.Net.HttpStatusCode},System.Guid,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Response"/> class.
            </summary>
            <param name="statusCode">The status code.</param>
            <param name="requestId">The request id</param>
            <param name="foundMixRadioHeader">The X-Mix-Radio header state.</param>
        </member>
        <member name="M:Nokia.Music.Response.#ctor(System.Nullable{System.Net.HttpStatusCode},System.Exception,System.String,System.Guid,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Response"/> class.
            </summary>
            <param name="statusCode">The HTTP Status code</param>
            <param name="error">The error.</param>
            <param name="responseBody">The response body.</param>
            <param name="requestId">The request id.</param>
            <param name="foundMixRadioHeader">The X-Mix-Radio header state.</param>
        </member>
        <member name="P:Nokia.Music.Response.RequestTimedOut">
            <summary>
            Gets a value indicating whether the request timed out or not.
            </summary>
            <value>
            False if the request did not time out; otherwise true.
            </value>
        </member>
        <member name="P:Nokia.Music.Response.Error">
            <summary>
            Gets or sets the exception if the call was not successful
            </summary>
        </member>
        <member name="P:Nokia.Music.Response.ErrorResponseBody">
            <summary>
            Gets or sets the response body supplied for an error response
            </summary>
            <value>
            The raw response body.
            </value>
        </member>
        <member name="P:Nokia.Music.Response.Succeeded">
            <summary>
            Gets a value indicating whether the call succeeded
            </summary>
        </member>
        <member name="P:Nokia.Music.Response.RequestId">
            <summary>
            Gets or sets the id of this request
            </summary>
        </member>
        <member name="P:Nokia.Music.Response.StatusCode">
            <summary>
            Gets or sets the HTTP Status code
            </summary>
        </member>
        <member name="P:Nokia.Music.Response.FoundMixRadioHeader">
            <summary>
            Gets or sets a value indicating whether the response had the X-MixRadio header set
            </summary>
        </member>
        <member name="M:Nokia.Music.Response`1.#ctor(System.Nullable{System.Net.HttpStatusCode},`0,System.Guid,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Response`1"/> class.
            </summary>
            <param name="statusCode">The status code.</param>
            <param name="result">The result.</param>
            <param name="requestId">The request id</param>
            <param name="foundMixRadioHeader">The X-Mix-Radio header state.</param>
        </member>
        <member name="M:Nokia.Music.Response`1.#ctor(System.Nullable{System.Net.HttpStatusCode},System.String,`0,System.Guid,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Response`1"/> class.
            </summary>
            <param name="statusCode">The status code.</param>
            <param name="contentType">The response Content Type.</param>
            <param name="result">The result.</param>
            <param name="requestId">The request id</param>
            <param name="foundMixRadioHeader">The X-Mix-Radio header state.</param>
        </member>
        <member name="M:Nokia.Music.Response`1.#ctor(System.Nullable{System.Net.HttpStatusCode},System.Exception,System.String,System.Guid,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Response`1"/> class.
            </summary>
            <param name="statusCode">The HTTP Status code</param>
            <param name="error">The error.</param>
            <param name="responseBody">The response body.</param>
            <param name="requestId">The request id.</param>
            <param name="foundMixRadioHeader">The X-Mix-Radio header state.</param>
        </member>
        <member name="P:Nokia.Music.Response`1.Result">
            <summary>
            Gets the result if the call was successful
            </summary>
            <value>
            The result.
            </value>
        </member>
        <member name="P:Nokia.Music.Response`1.ContentType">
            <summary>
            Gets or sets the HTTP Content Type
            </summary>
            <value>
            The content type.
            </value>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.#ctor(System.Nullable{System.Net.HttpStatusCode},System.Collections.Generic.List{`0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Guid,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.ListResponse`1"/> class.
            </summary>
            <param name="statusCode">The status code.</param>
            <param name="result">The result.</param>
            <param name="startIndex">The start index asked for.</param>
            <param name="itemsPerPage">The items per page asked for.</param>
            <param name="totalResults">The total results available.</param>
            <param name="requestId">The request id.</param>
            <param name="foundMixRadioHeader">The X-Mix-Radio header state.</param>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.#ctor(System.Nullable{System.Net.HttpStatusCode},System.Exception,System.String,System.Guid,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.ListResponse`1"/> class.
            </summary>
            <param name="statusCode">The HTTP Status code</param>
            <param name="error">The error.</param>
            <param name="errorResponseBody">The response body</param>
            <param name="requestId">The request id.</param>
            <param name="foundMixRadioHeader">The X-Mix-Radio header state.</param>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
            <returns>
            The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            The index of <paramref name="value" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            The position into which the new element was inserted.
            </returns>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</param>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
            <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</param>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</param>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.
            </summary>
            <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:Nokia.Music.ListResponse`1.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="P:Nokia.Music.ListResponse`1.ItemsPerPage">
            <summary>
            Gets the items per page the API call was asked for.
            </summary>
            <value>
            The items per page.
            </value>
        </member>
        <member name="P:Nokia.Music.ListResponse`1.StartIndex">
            <summary>
            Gets the start index the API call was asked for.
            </summary>
            <value>
            The start index.
            </value>
        </member>
        <member name="P:Nokia.Music.ListResponse`1.TotalResults">
            <summary>
            Gets the total results available.
            </summary>
            <value>
            The total results.
            </value>
        </member>
        <member name="P:Nokia.Music.ListResponse`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:Nokia.Music.ListResponse`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:Nokia.Music.ListResponse`1.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:Nokia.Music.ListResponse`1.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:Nokia.Music.ListResponse`1.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
        </member>
        <member name="P:Nokia.Music.ListResponse`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The item at the index</returns>
        </member>
        <member name="P:Nokia.Music.ListResponse`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The object at the specified index</returns>
        </member>
        <member name="T:Nokia.Music.MusicClient">
            <summary>
            The MixRadio API client
            </summary>
        </member>
        <member name="M:Nokia.Music.MusicClient.#cctor">
            <summary>
            Initializes the <see cref="T:Nokia.Music.MusicClient"/> class.
            </summary>
        </member>
        <member name="M:Nokia.Music.MusicClient.#ctor(System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:Nokia.Music.MusicClient"/> class,
              using the RegionInfo settings to locate the user.
            </summary>
            <param name="clientId">The Application Client ID obtained during registration</param>
        </member>
        <member name="M:Nokia.Music.MusicClient.#ctor(System.String,System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:Nokia.Music.MusicClient"/> class.
            </summary>
            <param name="clientId">The Application Client ID obtained during registration</param>
            <param name="countryCode"> The country code. </param>
        </member>
        <member name="M:Nokia.Music.MusicClient.#ctor(System.String,System.String,System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:Nokia.Music.MusicClient"/> class.
            </summary>
            <param name="clientId">The Application Client ID obtained during registration</param>
            <param name="countryCode"> The country code. </param>
            <param name="language"> The language code. </param>
        </member>
        <member name="M:Nokia.Music.MusicClient.#ctor(System.String,Nokia.Music.Internal.Request.IApiRequestHandler)">
            <summary>
              Initializes a new instance of the <see cref="T:Nokia.Music.MusicClient"/> class.
            </summary>
            <param name="clientId">The Application Client ID obtained during registration</param>
            <param name="requestHandler"> The request handler. </param>
            <remarks>
              Allows custom requestHandler for testing purposes
            </remarks>
        </member>
        <member name="M:Nokia.Music.MusicClient.#ctor(System.String,System.String,Nokia.Music.Internal.Request.IApiRequestHandler)">
            <summary>
              Initializes a new instance of the <see cref="T:Nokia.Music.MusicClient"/> class.
            </summary>
            <param name="clientId">The Application Client ID obtained during registration</param>
            <param name="countryCode"> The country code. </param>
            <param name="requestHandler"> The request handler. </param>
            <remarks>
              Allows custom requestHandler for testing purposes
            </remarks>
        </member>
        <member name="M:Nokia.Music.MusicClient.#ctor(System.String,System.String,System.String,Nokia.Music.Internal.Request.IApiRequestHandler)">
            <summary>
              Initializes a new instance of the <see cref="T:Nokia.Music.MusicClient"/> class.
            </summary>
            <param name="clientId">The Application Client ID obtained during registration</param>
            <param name="countryCode"> The country code. </param>
            <param name="language"> The language code. </param>
            <param name="requestHandler"> The request handler. </param>
            <remarks>
              Allows custom requestHandler for testing purposes
            </remarks>
        </member>
        <member name="M:Nokia.Music.MusicClient.SearchArtistsAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Searches for an Artist
            </summary>
            <param name="searchTerm">The search term.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="requestId">Id of the request.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Artists or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetArtistSearchSuggestionsAsync(System.String,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets artist search suggestions.
            </summary>
            <param name="searchTerm">The search term.</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="requestId">Id of the request.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing search suggestions
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetArtistsAroundLocationAsync(System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets artists that originate around a specified location
            </summary>
            <param name="latitude">The latitude to search around</param>
            <param name="longitude">The longitude to search around</param>
            <param name="maxdistance">The max distance (in KM) around the location to search</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Artists or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetTopArtistsAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the top artists
            </summary>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Artists or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetTopArtistsForGenreAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the top artists for a genre
            </summary>
            <param name="id">The genre to get results for.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Artists or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetTopArtistsForGenreAsync(Nokia.Music.Types.Genre,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the top artists for a genre
            </summary>
            <param name="genre">The genre to get results for.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Artists or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetArtistAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets an artist by id
            </summary>
            <param name="id">The artist id.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A Response containing a Artist or an Error</returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetSimilarArtistsAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets similar artists for an artist.
            </summary>
            <param name="id">The artist id.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Artists or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetSimilarArtistsAsync(Nokia.Music.Types.Artist,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets similar artists for an artist.
            </summary>
            <param name="artist">The artist.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Artists or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetArtistProductsAsync(System.String,System.Nullable{Nokia.Music.Types.Category},System.Nullable{Nokia.Music.Types.OrderBy},System.Nullable{Nokia.Music.Types.SortOrder},System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets products by an artist.
            </summary>
            <param name="id">The artist id.</param>
            <param name="category">The category.</param>
            <param name="orderBy">The field to sort the items by.</param>
            <param name="sortOrder">The sort order of the items.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Products or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetArtistProductsAsync(Nokia.Music.Types.Artist,System.Nullable{Nokia.Music.Types.Category},System.Nullable{Nokia.Music.Types.OrderBy},System.Nullable{Nokia.Music.Types.SortOrder},System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets products by an artist.
            </summary>
            <param name="artist">The artist.</param>
            <param name="category">The category.</param>
            <param name="orderBy">The field to sort the items by.</param>
            <param name="sortOrder">The sort order of the items.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Products or an Error
            </returns>
            <exception cref="T:System.ArgumentNullException">artist;Artist cannot be null</exception>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetProductAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets products by id.
            </summary>
            <param name="id">The product id.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A Response containing a Product or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetMixAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a mix by id
            </summary>
            <param name="id">The mix id.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A Mix or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetTrackSampleUri(System.String)">
            <summary>
            Gets a track sample uri.
            </summary>
            <param name="id">The track id.</param>
            <returns>
            A uri to a sample clip of the track
            </returns>
            <exception cref="T:System.ArgumentNullException">id;id cannot be null</exception>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetSimilarProductsAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a similar product for the supplied product.
            </summary>
            <param name="id">The product id.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Products or an Error</returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetSimilarProductsAsync(Nokia.Music.Types.Product,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a similar product for the supplied product.
            </summary>
            <param name="product">The product.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing Products or an Error</returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetTopProductsAsync(Nokia.Music.Types.Category,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a chart
            </summary>
            <param name="category">The category - only Album and Track charts are available.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Products or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetTopProductsForGenreAsync(System.String,Nokia.Music.Types.Category,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a chart
            </summary>
            <param name="id">The genre id.</param>
            <param name="category">The category - only Album and Track charts are available.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Products or an Error
            </returns>
            <exception cref="T:System.ArgumentNullException">genre;genre cannot be null</exception>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetTopProductsForGenreAsync(Nokia.Music.Types.Genre,Nokia.Music.Types.Category,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a chart
            </summary>
            <param name="genre">The genre.</param>
            <param name="category">The category - only Album and Track charts are available.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Products or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetNewReleasesAsync(Nokia.Music.Types.Category,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a list of new releases
            </summary>
            <param name="category">The category - only Album and Track lists are available.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Products or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetNewReleasesForGenreAsync(System.String,Nokia.Music.Types.Category,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a list of new releases
            </summary>
            <param name="id">The genre id.</param>
            <param name="category">The category - only Album and Track lists are available.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Products or an Error
            </returns>
            <exception cref="T:System.ArgumentNullException">genre;genre cannot be null</exception>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetNewReleasesForGenreAsync(Nokia.Music.Types.Genre,Nokia.Music.Types.Category,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a list of new releases
            </summary>
            <param name="genre">The genre.</param>
            <param name="category">The category - only Album and Track lists are available.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Products or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetGenresAsync(System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the available genres
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Genres or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.SearchAsync(System.String,System.Nullable{Nokia.Music.Types.Category},System.String,System.Nullable{Nokia.Music.Types.OrderBy},System.Nullable{Nokia.Music.Types.SortOrder},System.Int32,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Searches MixRadio
            </summary>
            <param name="searchTerm">Optional search term.</param>
            <param name="category">Optional category.</param>
            <param name="genreId">Optional genre id</param>
            <param name="orderBy">The field to sort the items by.</param>
            <param name="sortOrder">The sort order of the items.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="requestId">Id of the request.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <remarks>A searchTerm or genreId should be supplied</remarks>
            <returns>A ListResponse containing MusicItems or an Error</returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.SearchBpmAsync(System.Int32,System.Int32,System.String,System.Nullable{Nokia.Music.Types.OrderBy},System.Nullable{Nokia.Music.Types.SortOrder},System.Int32,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Searches for tracks with a Beats per Minute range.
            </summary>
            <param name="minBpm">The minimum BPM.</param>
            <param name="maxBpm">The maximum BPM.</param>
            <param name="genreId">The genre identifier.</param>
            <param name="orderBy">The order by.</param>
            <param name="sortOrder">The sort order.</param>
            <param name="startIndex">The start index.</param>
            <param name="itemsPerPage">The items per page.</param>
            <param name="requestId">The request identifier.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A list of tracks
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetSearchSuggestionsAsync(System.String,System.Int32,System.Nullable{System.Guid},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets search suggestions.
            </summary>
            <param name="searchTerm">The search term.</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="requestId">Id of the request.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing search suggestions
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetMixGroupsAsync(System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the Mix Groups available
            </summary>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing MixGroups or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetMixGroupsAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the Mix Groups available
            </summary>
            <param name="exclusiveTag">The exclusive tag.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing MixGroups or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetMixesAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the Mixes available in a group
            </summary>
            <param name="id">The mix group id.</param>
            <param name="cancellationToken">An optional CancellationToken</param>
            <returns>
            A ListResponse containing Mixes or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetMixesAsync(System.String,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the Mixes available in a group
            </summary>
            <param name="id">The mix group id.</param>
            <param name="exclusiveTag">The exclusive tag.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Mixes or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetMixesAsync(Nokia.Music.Types.MixGroup,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the Mixes available in a group
            </summary>
            <param name="group">The mix group.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Mixes or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetMixesAsync(Nokia.Music.Types.MixGroup,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the Mixes available in a group
            </summary>
            <param name="group">The mix group.</param>
            <param name="exclusiveTag">The exclusive tag.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Mixes or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetAllMixesAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets all Mixes available, regardless of grouping
            </summary>
            <param name="exclusiveTag">The optional exclusivity tag.</param>
            <param name="startIndex">The zero-based start index to fetch items from (e.g. to get the second page of 10 items, pass in 10).</param>
            <param name="itemsPerPage">The number of items to fetch.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A ListResponse containing Mixes or an Error
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetLanguagesAsync(System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets all languages
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A ListResponse containing the available languages</returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.AuthenticateUserAsync(System.String,Nokia.Music.Types.Scope,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Authenticates a user to enable the user data APIs.
            </summary>
            <param name="clientSecret">The client secret obtained during app registration</param>
            <param name="scopes">The scopes requested.</param>
            <param name="oauthRedirectUri">The OAuth completed URI.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            An AuthResultCode value indicating the result
            </returns>
            <remarks>
            Sorry, this method is messy due to the platform differences!
            </remarks>
        </member>
        <member name="M:Nokia.Music.MusicClient.IsUserTokenCached(System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a value indicating whether a user token is cached and the silent version of AuthenticateUserAsync can be used.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            <c>true</c> if a user token is cached; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.AuthenticateUserAsync(System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Attempts a silent authentication a user to enable the user data APIs using a cached access token.
            </summary>
            <param name="clientSecret">The client secret obtained during app registration</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            An AuthResultCode indicating the result
            </returns>
            <remarks>
            This overload of AuthenticateUserAsync can only be used once the user has gone through the OAuth flow and given permission to access their data.
            </remarks>
        </member>
        <member name="M:Nokia.Music.MusicClient.DeleteAuthenticationTokenAsync(System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Deletes any cached authentication token.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            An async task
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetUserPlayHistoryAsync(System.Nullable{Nokia.Music.Types.UserEventAction},System.Int32,System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the user play history.
            </summary>
            <param name="action">Type of the action.</param>
            <param name="startIndex">The start index.</param>
            <param name="itemsPerPage">The items per page.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>A list of play history events</returns>
            <remarks>Requires the ReadUserPlayHistory scope</remarks>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetUserTopArtistsAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets the top artists chart for the user
            </summary>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <param name="itemsPerPage">The items per page.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A list of artists
            </returns>
            <remarks>
            Charts are available for the last week
            </remarks>
        </member>
        <member name="M:Nokia.Music.MusicClient.GetUserRecentMixesAsync(System.Int32,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets a list of recent mixes played by the user
            </summary>
            <param name="itemsPerPage">The items per page.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A list of mixes
            </returns>
            <remarks>
            Charts are available for the last week
            </remarks>
        </member>
        <member name="M:Nokia.Music.MusicClient.StoreOAuthToken(Nokia.Music.Internal.Authorization.TokenResponse,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Stores the OAuth token.
            </summary>
            <param name="token">The token.</param>
            <param name="clientSecret">The client secret.</param>
            <param name="cancellationToken">The cancellation token to cancel operation</param>
            <returns>
            A Task for async execution
            </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.ExtractTokenProperties">
            <summary>
            Extracts OAuth token properties.
            </summary>
        </member>
        <member name="M:Nokia.Music.MusicClient.CreateCommand``1">
            <summary>
            Creates a command to execute
            </summary>
            <typeparam name="TCommand">The type of the command.</typeparam>
            <returns>A Command to call</returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.SetupSecureCommandAsync``2(Nokia.Music.Commands.MusicClientCommand{``0,``1},System.Boolean)">
            <summary>
            Adds settings required for building a secure command
            </summary>
            <typeparam name="TIntermediate">The type of the intermediate object.</typeparam>
            <typeparam name="TResult">The type of the returned object.</typeparam>
            <param name="command">The command </param>
            <param name="requiresOauth">If true add oAuth headers.  If false does not add oAuth headers</param>
            <returns>A task</returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.ValidateCountryCode(System.String)">
            <summary>
              Validates a country code.
            </summary>
            <param name="countryCode"> The country code. </param>
            <returns> A Boolean indicating that the country code is valid </returns>
        </member>
        <member name="M:Nokia.Music.MusicClient.SetRequestId(Nokia.Music.Commands.MusicClientCommand,System.Nullable{System.Guid})">
            <summary>
            Sets the request id for the given command
            </summary>
            <param name="cmd">The command</param>
            <param name="requestId">The request id</param>
        </member>
        <member name="P:Nokia.Music.MusicClient.RequestTimeout">
            <summary>
            Gets or sets the timeout duration for web requests.
            </summary>
            <value>
            The timeout duration in milliseconds.
            </value>
        </member>
        <member name="P:Nokia.Music.MusicClient.CountryCodeBasedOnRegionInfo">
            <summary>
            Gets a value indicating whether the country code was based on region info.
            </summary>
            <value>
            <c>true</c> if the country code was based on region info; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Nokia.Music.MusicClient.ClientId">
            <summary>
            Gets the app client id.
            </summary>
            <value>
            The app client id.
            </value>
        </member>
        <member name="P:Nokia.Music.MusicClient.CountryCode">
            <summary>
            Gets the country code.
            </summary>
            <value>
            The country code.
            </value>
        </member>
        <member name="P:Nokia.Music.MusicClient.Language">
            <summary>
            Gets the language code.
            </summary>
            <value>
            The language code.
            </value>
        </member>
        <member name="P:Nokia.Music.MusicClient.ApiBaseUrl">
            <summary>
            Gets the language code.
            </summary>
            <value>
            The language code.
            </value>
        </member>
        <member name="P:Nokia.Music.MusicClient.SecureApiBaseUrl">
            <summary>
            Gets the language code.
            </summary>
            <value>
            The language code.
            </value>
        </member>
        <member name="P:Nokia.Music.MusicClient.ServerTimeUtc">
            <summary>
            Gets the server UTC time.
            </summary>
            <value>
            The server UTC time.
            </value>
        </member>
        <member name="P:Nokia.Music.MusicClient.IsUserAuthenticated">
            <summary>
            Gets a value indicating whether the user has been authenticated.
            </summary>
            <value>
            <c>true</c> if the user is authenticated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Nokia.Music.MusicClient.IsUserTokenActive">
            <summary>
            Gets a value indicating whether the user token is active.
            </summary>
            <value>
            <c>true</c> if the user token is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Nokia.Music.MusicClient.RequestHandler">
            <summary>
            Gets the request handler in use for testing purposes.
            </summary>
            <value>
            The request handler.
            </value>
        </member>
        <member name="P:Nokia.Music.MusicClient.AuthHeaderDataProvider">
            <summary>
            Gets or sets the auth header data provider.
            </summary>
            <value>
            The auth header data provider.
            </value>
        </member>
        <member name="P:Nokia.Music.MusicClient.CurrentMusicClientSettings">
            <summary>
            Gets or sets the latest MusicClientSettings
            </summary>
        </member>
        <member name="T:Nokia.Music.Tasks.LaunchTask">
            <summary>
            Provides a simple way to show MixRadio
            </summary>
        </member>
        <member name="T:Nokia.Music.Tasks.TaskBase">
            <summary>
            Base class for MixRadio Tasks
            </summary>
        </member>
        <member name="M:Nokia.Music.Tasks.TaskBase.Launch(System.Uri,System.Uri)">
            <summary>
            Launches the specified app to app URI if available or shows a web equivalent.
            </summary>
            <param name="appToAppUri">The app to app URI.</param>
            <param name="webFallbackUri">The web fallback URI.</param>
            <returns>An async task to await</returns>
        </member>
        <member name="P:Nokia.Music.Tasks.TaskBase.ClientId">
            <summary>
            Gets or sets the optional Client ID for passing through to MixRadio.
            </summary>
            <value>
            The client ID.
            </value>
        </member>
        <member name="M:Nokia.Music.Tasks.LaunchTask.Show">
            <summary>
            Shows MixRadio
            </summary>
            <returns>An async task to await</returns>
        </member>
        <member name="T:Nokia.Music.Tasks.MusicSearchTask">
            <summary>
            Provides a simple way to show MixRadio Search Results
            </summary>
        </member>
        <member name="M:Nokia.Music.Tasks.MusicSearchTask.Show">
            <summary>
            Shows the Search Page in MixRadio
            </summary>
            <returns>An async task to await</returns>
        </member>
        <member name="P:Nokia.Music.Tasks.MusicSearchTask.SearchTerms">
            <summary>
            Gets or sets the search terms.
            </summary>
            <value>
            The search terms.
            </value>
        </member>
        <member name="T:Nokia.Music.Tasks.PlayMixTask">
            <summary>
            Provides a simple way to play a MixRadio Mix
            </summary>
        </member>
        <member name="M:Nokia.Music.Tasks.PlayMixTask.Show">
            <summary>
            Plays the Mix in MixRadio
            </summary>
            <returns>An async task to await</returns>
        </member>
        <member name="P:Nokia.Music.Tasks.PlayMixTask.ArtistName">
            <summary>
            Gets or sets the Artist Name.
            </summary>
            <value>
            The artist Name.
            </value>
            <remarks>You need to supply a Mix ID or an Artist Name</remarks>
        </member>
        <member name="P:Nokia.Music.Tasks.PlayMixTask.MixId">
            <summary>
            Gets or sets a Mix ID.
            </summary>
            <value>
            The mix ID.
            </value>
            <remarks>You need to supply a Mix ID or an Artist Name</remarks>
        </member>
        <member name="T:Nokia.Music.Tasks.ShowArtistTask">
            <summary>
            Provides a simple way to show MixRadio Artists
            </summary>
        </member>
        <member name="M:Nokia.Music.Tasks.ShowArtistTask.Show">
            <summary>
            Shows the Artist Page in MixRadio
            </summary>
            <returns>An async task to await</returns>
        </member>
        <member name="P:Nokia.Music.Tasks.ShowArtistTask.ArtistId">
            <summary>
            Gets or sets the Artist ID.
            </summary>
            <value>
            The artist ID.
            </value>
            <remarks>You need to supply an ID or a name</remarks>
        </member>
        <member name="P:Nokia.Music.Tasks.ShowArtistTask.ArtistName">
            <summary>
            Gets or sets the Artist Name.
            </summary>
            <value>
            The artist Name.
            </value>
            <remarks>You need to supply an ID or a name</remarks>
        </member>
        <member name="T:Nokia.Music.Tasks.ShowMixesTask">
            <summary>
            Provides a simple way to show MixRadio Mixes
            </summary>
        </member>
        <member name="M:Nokia.Music.Tasks.ShowMixesTask.Show">
            <summary>
            Shows MixRadio Mixes
            </summary>
            <returns>An async task to await</returns>
        </member>
        <member name="T:Nokia.Music.Tasks.ShowProductTask">
            <summary>
            Provides a simple way to show MixRadio Products
            </summary>
        </member>
        <member name="M:Nokia.Music.Tasks.ShowProductTask.Show">
            <summary>
            Shows the Product Page in MixRadio
            </summary>
            <returns>An async task to await</returns>
        </member>
        <member name="P:Nokia.Music.Tasks.ShowProductTask.ProductId">
            <summary>
            Gets or sets the Product ID.
            </summary>
            <value>
            The product ID.
            </value>
        </member>
        <member name="T:Nokia.Music.Types.Artist">
            <summary>
            Represents a MixRadio Artist
            </summary>
        </member>
        <member name="T:Nokia.Music.Types.MusicItem">
            <summary>
            Represents a MixRadio Catalog Item
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.MusicItem.ExtractThumbs(Newtonsoft.Json.Linq.JToken,System.Uri@,System.Uri@,System.Uri@,System.Uri@)">
            <summary>
            Extracts the thumbnails from JSON.
            </summary>
            <param name="thumbnailsToken">The thumbnails token.</param>
            <param name="square50">The square50 uri.</param>
            <param name="square100">The square100 uri.</param>
            <param name="square200">The square200 uri.</param>
            <param name="square320">The square320 uri.</param>
        </member>
        <member name="M:Nokia.Music.Types.MusicItem.ExtractThumb(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
               Extracts a thumb.
            </summary>
            <param name="thumbnailsToken">A json token with the list of thumbs</param>
            <param name="size">The desired size. There are defined values, see API documenntation.</param>
            <returns>The uri to the thumbnail</returns>
        </member>
        <member name="P:Nokia.Music.Types.MusicItem.Id">
            <summary>
            Gets or sets the item id.
            </summary>
            <value>
            The item id.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.MusicItem.AppToAppUri">
            <summary>
            Gets the app-to-app uri to use to show this item in MixRadio
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.MusicItem.WebUri">
            <summary>
            Gets the app-to-app uri to use to show this item in MixRadio
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.MusicItem.Name">
            <summary>
            Gets or sets the item name.
            </summary>
            <value>
            The item name.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.MusicItem.Thumb50Uri">
            <summary>
            Gets or sets the 50x50 thumbnail URI.
            </summary>
            <value>
            The 50x50 thumbnail URI.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.MusicItem.Thumb100Uri">
            <summary>
            Gets or sets the 100x100 thumbnail URI.
            </summary>
            <value>
            The 100x100 thumbnail URI.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.MusicItem.Thumb200Uri">
            <summary>
            Gets or sets the 200x200 thumbnail URI.
            </summary>
            <value>
            The 200x200 thumbnail URI.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.MusicItem.Thumb320Uri">
            <summary>
            Gets or sets the 320x320 thumbnail URI.
            </summary>
            <value>
            The 320x320 thumbnail URI.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.MusicItem.Thumb640Uri">
            <summary>
            Gets or sets the 640x640 thumbnail URI.
            </summary>
            <value>
            The 640x640 thumbnail URI.
            </value>
        </member>
        <member name="M:Nokia.Music.Types.Artist.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Types.Artist"/> class.
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.Artist.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.Artist.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.Artist.PlayMix">
            <summary>
            Launches MixRadio to start a mix for the artist using the PlayMixTask
            </summary>
            <returns>An async task to await</returns>
        </member>
        <member name="M:Nokia.Music.Types.Artist.Show">
            <summary>
            Launches MixRadio to show details for the artist using the ShowArtistTask
            </summary>
            <returns>An async task to await</returns>
        </member>
        <member name="M:Nokia.Music.Types.Artist.FromJToken(Newtonsoft.Json.Linq.JToken,Nokia.Music.Internal.IMusicClientSettings)">
            <summary>
            Creates an Artist from a JSON Object
            </summary>
            <param name="item">The item.</param>
            <param name="settings">The settings.</param>
            <returns>
            An Artist object
            </returns>
        </member>
        <member name="P:Nokia.Music.Types.Artist.AppToAppUri">
            <summary>
            Gets the app-to-app uri to use to show this item in MixRadio
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.Artist.AppToAppPlayUri">
            <summary>
            Gets the app-to-app uri to use to play this item in MixRadio
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.Artist.WebUri">
            <summary>
            Gets the web uri to use to show this item in MixRadio on the web
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.Artist.WebPlayUri">
            <summary>
            Gets the web uri to use to play this item in MixRadio on the web
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.Artist.Country">
            <summary>
            Gets or sets the artist's country of origin.
            </summary>
            <value>
            The artist's country of origin.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Artist.Genres">
            <summary>
            Gets or sets the artist's genres.
            </summary>
            <value>
            The artist's genres.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Artist.MusicBrainzId">
            <summary>
            Gets or sets the MusicBrainz ID.
            </summary>
            <value>
            The artist MusicBrainz ID if known.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Artist.Origin">
            <summary>
            Gets or sets the artist's origin location where available.
            </summary>
            <value>
            The origin.
            </value>
        </member>
        <member name="T:Nokia.Music.Types.AuthResultCode">
            <summary>
            The OAuth result code
            <remarks>
            see http://tools.ietf.org/html/rfc6749#section-4.1.2.1
            </remarks>
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.AuthResultCode.Unknown">
            <summary>
            Unknown error
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.AuthResultCode.Success">
            <summary>
            Completed Successfully
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.AuthResultCode.Cancelled">
            <summary>
            Cancelled by user
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.AuthResultCode.AccessDenied">
            <summary>
            Access denied by user
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.AuthResultCode.UnauthorizedClient">
            <summary>
            The client id was not valid
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.AuthResultCode.InvalidScope">
            <summary>
            An invalid scope was specified
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.AuthResultCode.ServerError">
            <summary>
            A server error occurred
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.AuthResultCode.FailedToRefresh">
            <summary>
            An error occurred trying to refresh an existing token
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.AuthResultCode.NoCachedToken">
            <summary>
            A silent refresh from an existing token was not possible as there is no cached token
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.AuthResultCode.InProgress">
            <summary>
            The authorise process is in progress (Windows Phone 8.1 only)
            </summary>
        </member>
        <member name="T:Nokia.Music.Types.Category">
            <summary>
            Defines the API item category
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.Category.Unknown">
            <summary>
            The item is unknown
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.Category.Artist">
            <summary>
            The item is an Artist
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.Category.Album">
            <summary>
            The item is an Album
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.Category.Single">
            <summary>
            The item is a Single
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.Category.Track">
            <summary>
            The item is a Track
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.Category.RadioStation">
            <summary>
            The item is a radio station
            </summary>
        </member>
        <member name="T:Nokia.Music.Types.Language">
            <summary>
            Represents a MixRadio Language
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.Language.FromJToken(Newtonsoft.Json.Linq.JToken,Nokia.Music.Internal.IMusicClientSettings)">
            <summary>
            Creates a Genre from a JSON Object
            </summary>
            <param name="item">The item.</param>
            <param name="settings">The settings.</param>
            <returns>
            A Genre object
            </returns>
        </member>
        <member name="P:Nokia.Music.Types.Language.Id">
            <summary>
            Gets or sets the language id.
            </summary>
            <value>
            The language id.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Language.Name">
            <summary>
            Gets or sets the language name.
            </summary>
            <value>
            The language name.
            </value>
        </member>
        <member name="T:Nokia.Music.Types.ScopeExtensions">
            <summary>
            Helper method(s) for Scope type
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.ScopeExtensions.AsStringParam(Nokia.Music.Types.Scope)">
            <summary>
            Generates the scope param.
            </summary>
            <param name="scope">The scope.</param>
            <returns>A string representation of scope flags</returns>
        </member>
        <member name="M:Nokia.Music.Types.ScopeExtensions.AsStringParams(Nokia.Music.Types.Scope)">
            <summary>
            Generates the scope param.
            </summary>
            <param name="scope">The scope.</param>
            <returns>A string representation of scope flags</returns>
        </member>
        <member name="M:Nokia.Music.Types.ScopeExtensions.ConvertScopeEnum(Nokia.Music.Types.Scope)">
            <summary>
            Converts a scope enumeration value into a string representation.
            </summary>
            <param name="scope">The scope.</param>
            <returns>A string value</returns>
        </member>
        <member name="T:Nokia.Music.Types.Seed">
            <summary>
            Represents a mix data-seed
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.Seed.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Types.Seed"/> class.
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.Seed.FromArtistId(System.String)">
            <summary>
            Builds an seed from an artist Id
            </summary>
            <param name="artistId">
            The entity Id of the artist to use as a seed
            </param>
            <returns>
            The seed descriptor
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.Seed.FromArtistName(System.String)">
            <summary>
            Builds an seed from an artist name
            </summary>
            <param name="artistName">
            The name of the artist to use as a seed
            </param>
            <returns>
            The seed descriptor
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.Seed.FromMixId(System.String)">
            <summary>
            Builds an seed from a mix Id
            </summary>
            <param name="mixId">
            The id of the mix to use as a seed
            </param>
            <returns>
            The seed descriptor
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.Seed.FromUserId(System.String)">
            <summary>
            Builds an seed from a user Id
            </summary>
            <param name="userId">
            The Id of the user to use as a seed
            </param>
            <returns>
            The seed descriptor
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.Seed.op_Equality(Nokia.Music.Types.Seed,Nokia.Music.Types.Seed)">
            <summary>
            Determines if two seeds are equal.
            </summary>
            <param name="seed1">The first seed/</param>
            <param name="seed2">The second seed.</param>
            <returns>True if the two seeds are equal.</returns>
        </member>
        <member name="M:Nokia.Music.Types.Seed.op_Inequality(Nokia.Music.Types.Seed,Nokia.Music.Types.Seed)">
            <summary>
            Determines if two seeds are not equal.
            </summary>
            <param name="seed1">The first seed/</param>
            <param name="seed2">The second seed.</param>
            <returns>True if the two seeds are not equal.</returns>
        </member>
        <member name="M:Nokia.Music.Types.Seed.Equals(System.Object)">
            <summary>
            Determines if two seeds are equal.
            </summary>
            <param name="obj">The other seed.</param>
            <returns>True if the two seeds are equal.</returns>
        </member>
        <member name="M:Nokia.Music.Types.Seed.GetHashCode">
            <summary>
            Returns the hash code for this seed.
            </summary>
            <returns>A has code.</returns>
        </member>
        <member name="M:Nokia.Music.Types.Seed.ToJson">
            <summary>
            Produces a Json representation of this object
            </summary>
            <returns>The Json token</returns>
        </member>
        <member name="M:Nokia.Music.Types.Seed.FromJson(System.String)">
            <summary>
            Given a Json representation of a seed, returns a parsed representation.
            </summary>
            <param name="json">
            The JToken representing the seed.
            </param>
            <returns>
            The seed descriptor.
            </returns>
            <exception cref="T:System.ArgumentException">
            If the token cannot be parsed into a seed.
            </exception>
        </member>
        <member name="P:Nokia.Music.Types.Seed.Id">
            <summary>
            Gets the id of the seed.
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.Seed.Name">
            <summary>
            Gets the name of the seed.
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.Seed.Type">
            <summary>
            Gets the type of the seed.
            </summary>
        </member>
        <member name="T:Nokia.Music.Types.SeedCollection">
            <summary>
            Collection of seeds
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.SeedCollection.#ctor(Nokia.Music.Types.Seed[])">
            <summary>
            Collection of seeds with additional functionality
            </summary>
            <param name="seeds">
            Seeds to construct with
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if no seeds passed in
            </exception>
        </member>
        <member name="M:Nokia.Music.Types.SeedCollection.op_Equality(Nokia.Music.Types.SeedCollection,Nokia.Music.Types.SeedCollection)">
            <summary>
                Determines if the two collections are equal.
            </summary>
            <param name="seed1">The first seed collection.</param>
            <param name="seed2">The second seed collection.</param>
            <returns>True if the collections are equal.</returns>
        </member>
        <member name="M:Nokia.Music.Types.SeedCollection.op_Inequality(Nokia.Music.Types.SeedCollection,Nokia.Music.Types.SeedCollection)">
            <summary>
                Determines if the two collections are not equal.
            </summary>
            <param name="seed1">The first seed collection.</param>
            <param name="seed2">The second seed collection.</param>
            <returns>True if the collections aren't equal.</returns>
        </member>
        <member name="M:Nokia.Music.Types.SeedCollection.Equals(System.Object)">
            <summary>
            Determines if the seed collections are equal.
            </summary>
            <param name="obj">
            The target for comparison.
            </param>
            <returns>
            True if equal, otherwise false.
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.SeedCollection.GetEnumerator">
            <summary>
                Gets the enumerator for private collection of seeds
            </summary>
            <returns>The enumerator</returns>
        </member>
        <member name="M:Nokia.Music.Types.SeedCollection.GetHashCode">
            <summary>
                Serves as a hash function for a particular type.
            </summary>
            <returns>A hashed representation.</returns>
        </member>
        <member name="M:Nokia.Music.Types.SeedCollection.FromJson(System.String)">
            <summary>
            Get a seed collection from a string of seed json
            </summary>
            <param name="serialised">
            The json containing the seeds
            </param>
            <returns>
            Seed collection populated
            </returns>
        </member>
        <member name="P:Nokia.Music.Types.SeedCollection.Count">
            <summary>
            Gets the seed count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="T:Nokia.Music.Types.SeedType">
            <summary>
            The type of Mix Seed
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.SeedType.Unknown">
            <summary>
            Unknown seed
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.SeedType.ArtistName">
            <summary>
            Seed from artist name
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.SeedType.ArtistId">
            <summary>
            Seed from artist entity Id
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.SeedType.UserId">
            <summary>
            Seed from a user Id
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.SeedType.MixId">
            <summary>
            Seed from a mix Id
            </summary>
        </member>
        <member name="T:Nokia.Music.Types.UserEventClientType">
            <summary>
            Represents the type of the client logging the event.
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.UserEventClientType.Unknown">
            <summary>
            The type of client is unknown.
            </summary>
        </member>
        <member name="T:Nokia.Music.Types.Genre">
            <summary>
            Represents a MixRadio Genre
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.Genre.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Types.Genre"/> class.
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.Genre.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.Genre.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.Genre.FromJToken(Newtonsoft.Json.Linq.JToken,Nokia.Music.Internal.IMusicClientSettings)">
            <summary>
            Creates a Genre from a JSON Object
            </summary>
            <param name="item">The item.</param>
            <param name="settings">The settings.</param>
            <returns>
            A Genre object
            </returns>
        </member>
        <member name="P:Nokia.Music.Types.Genre.Id">
            <summary>
            Gets or sets the genre id.
            </summary>
            <value>
            The genre id.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Genre.Name">
            <summary>
            Gets or sets the genre name.
            </summary>
            <value>
            The genre name.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Genre.Languages">
            <summary>
            Gets or sets the associated languages.
            </summary>
            <value>
            The associated languages.
            </value>
        </member>
        <member name="T:Nokia.Music.Types.Location">
            <summary>
            Represents a Location
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.Location.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Types.Location"/> class.
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.Location.ToString">
            <summary>
            Returns a string representation of the location object
            </summary>
            <returns>A string representation of the location object</returns>
        </member>
        <member name="M:Nokia.Music.Types.Location.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.Location.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.Location.FromJToken(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Creates a Location from a JSON Object
            </summary>
            <param name="item">The item.</param>
            <returns>A Location object</returns>
        </member>
        <member name="P:Nokia.Music.Types.Location.Latitude">
            <summary>
            Gets or sets the latitude.
            </summary>
            <value>
            The latitude.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Location.Longitude">
            <summary>
            Gets or sets the longitude.
            </summary>
            <value>
            The longitude.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Location.Name">
            <summary>
            Gets or sets the name of the location if available.
            </summary>
            <value>
            The name of the location if available.
            </value>
        </member>
        <member name="T:Nokia.Music.Types.Mix">
            <summary>
            Represents a Mix
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.Mix.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.Mix.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.Mix.Play">
            <summary>
            Launches MixRadio to start playback of the mix using the PlayMixTask
            </summary>
            <returns>An async task to await</returns>
        </member>
        <member name="M:Nokia.Music.Types.Mix.FromJToken(Newtonsoft.Json.Linq.JToken,Nokia.Music.Internal.IMusicClientSettings)">
            <summary>
            Creates a Mix from a JSON Object
            </summary>
            <param name="item">The item.</param>
            <param name="settings">The settings.</param>
            <returns>
            A Mix object
            </returns>
        </member>
        <member name="P:Nokia.Music.Types.Mix.AppToAppUri">
            <summary>
            Gets the app-to-app uri to use to play this item in MixRadio
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.Mix.WebUri">
            <summary>
            Gets the web uri to use to play this item in MixRadio on the web
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.Mix.Id">
            <summary>
            Gets or sets the Mix id.
            </summary>
            <value>
            The Mix id.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Mix.Description">
            <summary>
            Gets or sets the description text for the mix.
            </summary>
            <value>
            A description of the mix, if present.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Mix.ParentalAdvisory">
            <summary>
            Gets or sets a value indicating whether the mix has a parental advisory warning.
            </summary>
            <value>
              <c>true</c> if parental advisory; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Mix.Seeds">
            <summary>
            Gets or sets the mix seeds.
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.Mix.TrackCount">
            <summary>
            Gets or sets the track count.
            </summary>
            <value>
            The track count.
            </value>
        </member>
        <member name="T:Nokia.Music.Types.MixGroup">
            <summary>
            Represents a mix group
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.MixGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Types.MixGroup"/> class.
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.MixGroup.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Types.MixGroup"/> class with
            parameters.
            </summary>
            <param name="id">The id.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Nokia.Music.Types.MixGroup.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.MixGroup.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.MixGroup.FromJToken(Newtonsoft.Json.Linq.JToken,Nokia.Music.Internal.IMusicClientSettings)">
            <summary>
            Creates a MixGroup from a JSON Object
            </summary>
            <param name="item">The item.</param>
            <param name="settings">The settings.</param>
            <returns>
            A MixGroup object
            </returns>
        </member>
        <member name="P:Nokia.Music.Types.MixGroup.Id">
            <summary>
            Gets the MixGroup id.
            </summary>
            <value>
            The MixGroup id.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.MixGroup.Name">
            <summary>
            Gets the MixGroup name.
            </summary>
            <value>
            The MixGroup name.
            </value>
        </member>
        <member name="T:Nokia.Music.Types.OrderBy">
            <summary>
            Order by enumeration for ordering products etc.
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.OrderBy.Relevance">
            <summary>
            Items are ordered by relevance (default)
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.OrderBy.Name">
            <summary>
            Items are ordered by name
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.OrderBy.ReleaseDate">
            <summary>
            Items are ordered by release date
            </summary>
        </member>
        <member name="T:Nokia.Music.Types.Price">
            <summary>
            Represents a MixRadio Price
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.Price.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Types.Price"/> class.
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.Price.FromPriceInfo(System.Double,System.String)">
            <summary>
            Create a price object with specified parameters
            </summary>
            <param name="value">The price value</param>
            <param name="currency">The currency of the price</param>
            <returns>A Price object from specified parameters</returns>
        </member>
        <member name="M:Nokia.Music.Types.Price.FromJToken(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Creates a Price from a JSON Object
            </summary>
            <param name="item">The item.</param>
            <returns>A Price object</returns>
        </member>
        <member name="P:Nokia.Music.Types.Price.Currency">
            <summary>
            Gets the currency.
            </summary>
            <value>
            The currency.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Price.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:Nokia.Music.Types.Product">
            <summary>
            Represents a MixRadio Product, i.e. Album, Single or Track
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.Product.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nokia.Music.Types.Product"/> class.
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.Product.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.Product.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.Product.Show">
            <summary>
            Launches MixRadio to show details about the product using the ShowProductTask
            </summary>
            <returns>An async task to await</returns>
        </member>
        <member name="M:Nokia.Music.Types.Product.FromJToken(Newtonsoft.Json.Linq.JToken,Nokia.Music.Internal.IMusicClientSettings)">
            <summary>
            Creates a Product from a JSON Object
            </summary>
            <param name="item">The item.</param>
            <param name="settings">The settings.</param>
            <returns>
            A Product object
            </returns>
        </member>
        <member name="M:Nokia.Music.Types.Product.ExtractTracks(Newtonsoft.Json.Linq.JToken,Nokia.Music.Internal.IMusicClientSettings)">
            <summary>
            Extracts the tracks from the json.
            </summary>
            <param name="tracksToken">The tracks token.</param>
            <param name="settings">The settings.</param>
            <returns>
            A list of tracks
            </returns>
        </member>
        <member name="P:Nokia.Music.Types.Product.AppToAppUri">
            <summary>
            Gets the app-to-app uri to use to show this item in MixRadio
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.Product.WebUri">
            <summary>
            Gets the web uri to use to show this item in MixRadio on the web
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.Product.Category">
            <summary>
            Gets or sets the product's category.
            </summary>
            <value>
            The product's category.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Product.Genres">
            <summary>
            Gets or sets the product's genres.
            </summary>
            <value>
            The product's genres.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Product.Performers">
            <summary>
            Gets or sets the product's performers.
            </summary>
            <value>
            The product's performers.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Product.Price">
            <summary>
            Gets or sets the product's price when available to purchase.
            </summary>
            <value>
            The price when available to purchase.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Product.TrackCount">
            <summary>
            Gets or sets the track count for Album or Single products.
            </summary>
            <value>
            The track count.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Product.TakenFrom">
            <summary>
            Gets or sets the Album or Single a Track is from.
            </summary>
            <value>
            The owning Album or Single if appropriate.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Product.Tracks">
            <summary>
            Gets or sets the tracks on the album.
            </summary>
            <value>
            The tracks.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Product.Duration">
            <summary>
            Gets or sets the product's duration.
            </summary>
            <value>
            The duration.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Product.Sequence">
            <summary>
            Gets or sets the tracknumber of a local track if available.
            </summary>
            <value>
            The tracknumber.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Product.VariousArtists">
            <summary>
            Gets or sets a value indicating whether there are various artists on this product (album/track).
            </summary>
            <value>
              <c>True</c> if there are various artists on this product (album/track); otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Product.Label">
            <summary>
            Gets or sets the product's record label.
            </summary>
            <value>
            The name of the record label.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Product.StreetReleaseDate">
            <summary>
            Gets or sets the street release date of the product.
            </summary>
            <value>
            The street release date.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Product.SellerStatement">
            <summary>
            Gets or sets the Seller Statement for the product
            </summary>
            <value>
            The state from the seller, if available. Sony provide this for example.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Product.ActorNames">
            <summary>
            Gets or sets the actor names
            Only available in India
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.Product.LyricistsNames">
            <summary>
            Gets or sets the Lyricist name
            Only available in India
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.Product.SingerNames">
            <summary>
            Gets or sets the Singer names
            Only available in India
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.Product.MovieDirectorNames">
            <summary>
            Gets or sets the movie director names
            Only available in India
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.Product.MovieProducerNames">
            <summary>
            Gets or sets the movie producer names
            Only available in India
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.Product.MusicDirectorNames">
            <summary>
            Gets or sets the music director names
            Only available in India
            </summary>
        </member>
        <member name="P:Nokia.Music.Types.Product.ParentalAdvisory">
            <summary>
            Gets or sets a value indicating whether the item comes with parental advisory.
            </summary>
            <value>
              <c>true</c> if [parental advisory]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.Product.Bpm">
            <summary>
            Gets or sets the Beats per Minute for the track.
            </summary>
            <value>
            The Beats per Minute.
            </value>
        </member>
        <member name="T:Nokia.Music.Types.Scope">
            <summary>
                Defines the access scopes available
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.Scope.None">
            <summary>
                No scope is set
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.Scope.ReadUserPlayHistory">
            <summary>
                Read user play history
            </summary>
        </member>
        <member name="T:Nokia.Music.Types.SortOrder">
            <summary>
            Sort order enumeration for ordering products etc.
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.SortOrder.Ascend">
            <summary>
            Items are ordered ascending (default)
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.SortOrder.Descend">
            <summary>
            Items are ordered descending
            </summary>
        </member>
        <member name="T:Nokia.Music.Types.UserEvent">
            <summary>
            Represents a user playback event
            </summary>
        </member>
        <member name="M:Nokia.Music.Types.UserEvent.FromJToken(Newtonsoft.Json.Linq.JToken,Nokia.Music.Internal.IMusicClientSettings)">
            <summary>
            Creates a UserEvent from a JSON Object
            </summary>
            <param name="item">The item.</param>
            <param name="settings">The settings.</param>
            <returns>
            A UserEvent object
            </returns>
        </member>
        <member name="P:Nokia.Music.Types.UserEvent.Client">
            <summary>
            Gets or sets the client name.
            </summary>
            <value>
            The client.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.UserEvent.ClientVersion">
            <summary>
            Gets or sets the client version.
            </summary>
            <value>
            The client version.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.UserEvent.ClientType">
            <summary>
            Gets or sets the client type.
            </summary>
            <value>
            A value from the UserEventClientType enumeration.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.UserEvent.DateTime">
            <summary>
            Gets or sets the date time of the event in UTC.
            </summary>
            <value>
            The date time.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.UserEvent.Action">
            <summary>
            Gets or sets the action type.
            </summary>
            <value>
            The action.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.UserEvent.Target">
            <summary>
            Gets or sets the target type.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.UserEvent.Offset">
            <summary>
            Gets or sets the offset the event happened at.
            </summary>
            <value>
            The offset.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.UserEvent.Location">
            <summary>
            Gets or sets the location the event happened at.
            </summary>
            <value>
            The location.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.UserEvent.Product">
            <summary>
            Gets or sets the product the event is about.
            </summary>
            <value>
            The product.
            </value>
        </member>
        <member name="P:Nokia.Music.Types.UserEvent.Mix">
            <summary>
            Gets or sets the mix the event is about.
            </summary>
            <value>
            The mix.
            </value>
        </member>
        <member name="T:Nokia.Music.Types.UserEventAction">
            <summary>
            Represents the action that the UserEvent relates to
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.UserEventAction.Unknown">
            <summary>
            Unset property
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.UserEventAction.Complete">
            <summary>
            Track completed playing
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.UserEventAction.SkipPrev">
            <summary>
            Skipped previous midway through track
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.UserEventAction.SkipNext">
            <summary>
            Skipped next midway through track
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.UserEventAction.Stop">
            <summary>
            Playback stopped
            </summary>
        </member>
        <member name="T:Nokia.Music.Types.UserEventTarget">
            <summary>
            Represents the target type that the UserEvent relates to
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.UserEventTarget.Unknown">
            <summary>
            Unset property
            </summary>
        </member>
        <member name="F:Nokia.Music.Types.UserEventTarget.Track">
            <summary>
            Track event
            </summary>
        </member>
    </members>
</doc>
